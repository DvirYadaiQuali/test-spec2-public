openapi: 3.0.1
info:
  title: Torque API Reference
  description: 'This page contains information about the Torque APIs and how to use it.<br><br>To be able to test the API methods, you will need an access token to be set in the Authorize section.If you got to this page from your Torque account, we already made it available for you, but you can switch to a different token as needed.<br>To get a different token, use the ''Get token'' function available under the ''Access Tokens'' section. After running the method, copy the access_token you get in the response and set it in the Authorize fieldas ''Bearer access_token''. For example: Bearer fqSWuw72BbUVFn8AbokF77GJ0r5KEn9MiZjLXF8kBwI.<br><br>The API can be accessed with your account endpoint as will be mentioned in the descriptions and examples or using https://qtorque.io as the prefix instead.'
  version: latest
servers:
  - url: https://review1.qualilabs.net
  - url: https://review2.qualilabs.net
  - url: https://review3.qualilabs.net
  - url: https://preview.qualilabs.net
paths:
  /api/about:
    get:
      tags:
        - About
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.AboutResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  '/api/accounts/{account}/details':
    get:
      tags:
        - Account
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.TokenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
    put:
      tags:
        - Account
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AccountExtraDetailsModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.TokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/accounts/{account}/login':
    post:
      tags:
        - Account
      description: Creates an API session token. Token validity period is 7200 seconds.
      parameters:
        - name: account
          in: path
          description: Account name
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.ModelForLogin'
              description: Login request
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.TokenResponse'
        '401':
          description: Invalid credentials or too many login attempts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  '/api/accounts/{accountName}':
    delete:
      tags:
        - Account
      parameters:
        - name: accountName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/accounts/account_request:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.CreateAccountRequest'
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.CreateAccountInnerRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  /api/accounts/alias:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.UpdateAccountAliasRequest'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/accounts/contactme:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.ContactMeRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/accounts/forgotaccount:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.ForgotAccountRequest'
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.ForgotAccountRequestInner'
      responses:
        '200':
          description: Success
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  /api/accounts/forgotpassword:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.ForgotPasswordRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
      security: [ ]
  /api/accounts/invitations:
    get:
      tags:
        - Account
      parameters:
        - name: space_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.UserInvitationResponse'
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.CreateInvitationsRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.RemoveInvitesRequest'
      responses:
        '200':
          description: Success
  /api/accounts/login:
    post:
      tags:
        - Account
      description: "Creates an API session token per account (that matches the provided credentials)\r\nToken validity period is 7200 seconds"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.ModelForLogin'
              description: Login request
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.TokenResponse'
        '401':
          description: Invalid credentials or too many login attempts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  /api/accounts/register:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.CreateAccountRequest'
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.CreateAccountInnerRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  /api/accounts/resetpassword:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.ResetPasswordRequest'
      responses:
        '200':
          description: Success
        '422':
          description: Client Error
      security: [ ]
  /api/accounts/roles_and_technologies:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.UserSurveyRequest'
      responses:
        '200':
          description: Success
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/accounts/signup:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.UserSignupRequest'
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.UserSignupInnerRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  '/api/accounts/signup/{secret}':
    get:
      tags:
        - Account
      parameters:
        - name: secret
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.InvitedUserDetailsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  /api/accounts/usages:
    get:
      tags:
        - Account
      parameters:
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.SandboxesUsage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/cost/breakdown:
    get:
      tags:
        - AccountCost
      parameters:
        - name: criteria
          in: query
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.CostExplorer.AccountCostBreakdownResult'
  /api/cost/cloud_accounts:
    get:
      tags:
        - AccountCost
      parameters:
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CostForecastResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/cost/environments:
    get:
      tags:
        - AccountCost
      parameters:
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: automation
          in: query
          schema:
            type: boolean
        - name: blueprint_name
          in: query
          schema:
            type: array
            items:
              type: string
        - name: owner
          in: query
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: "Possible values:\r\n<list type=\"bullet\"><item>environment_name</item><item>duration</item><item>cloud_account</item><item>status - when sorting by status descending, the list should match the sandbox list (and ascending will also be based on the same logic) - The logic in the sandbox list groups the sandboxes by status, and sorts by date in each of the groups.</item><item>blueprint_name</item><item>owner</item></list>\r\nFor descending, the user needs to pass a minus sign i.e: sort=-owner, otherwise it is sorted in Ascending order."
          schema:
            type: string
        - name: count
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.History.EnvironmentWithCost'
  /api/cost/environments_summary:
    get:
      tags:
        - AccountCost
      parameters:
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: automation
          in: query
          schema:
            type: boolean
        - name: cloud_account
          in: query
          schema:
            type: array
            items:
              type: string
        - name: blueprint_name
          in: query
          schema:
            type: array
            items:
              type: string
        - name: owner
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.CostExplorer.CostSummaryResult'
  /api/cost/export:
    get:
      tags:
        - AccountCost
      parameters:
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
  /api/cost/filter_options:
    get:
      tags:
        - AccountCost
      parameters:
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: filter
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/cost/usage:
    get:
      tags:
        - AccountCost
      parameters:
        - name: date
          in: query
          schema:
            type: string
            format: date-time
        - name: timezone
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.Sandbox.SandboxUsagePerDayResponse'
  /api/policies:
    get:
      tags:
        - AccountPolicies
      description: Get account policies
      parameters:
        - name: policy_template_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyInstances.GetAccountPolicyInstancesResponse'
        '422':
          description: Invalid parameter value
    post:
      tags:
        - AccountPolicies
      description: Create account policy
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Governance.Contracts.Requests.AccountPolicyInstances.CreatePolicyInstanceRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyInstances.CreateAccountPolicyInstanceResponse'
        '404':
          description: Policy name not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Invalid parameter value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/policies/{policy_name}':
    delete:
      tags:
        - AccountPolicies
      description: Remove account policy
      parameters:
        - name: policy_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '422':
          description: Invalid parameter value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: Policy name not found
  /api/policytemplates:
    get:
      tags:
        - AccountPolicyTemplates
      description: Get account policy templates
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyTemplates.GetAllAccountPolicyTemplatesResponse'
  /api/repositories:
    get:
      tags:
        - AccountRepositories
      description: Get account repositories
      parameters:
        - name: type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.RepositoryDetailsResponse'
        '422':
          description: Invalid parameter value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/repositories/{repository_name}':
    delete:
      tags:
        - AccountRepositories
      description: Remove account repository
      parameters:
        - name: repository_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Repository name not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/repositories/{repository_name}/sync':
    post:
      tags:
        - AccountRepositories
      description: Sync account repository
      parameters:
        - name: repository_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Repository name not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/repositories/github:
    post:
      tags:
        - AccountRepositories
      description: Create a new GitHub repository
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AuthorizeAddGithubRepositoryRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CreateRepositoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Invalid parameter value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/tfmodules:
    get:
      tags:
        - AccountTerraformModule
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.Blueprint.TerraformModuleDescriptorResponse'
    post:
      tags:
        - AccountTerraformModule
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleDescriptorRequest'
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.Blueprint.TerraformModuleDescriptorResponse'
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleDescriptorUpdate'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '422':
          description: Client Error
  '/api/settings/tfmodules/{existingModuleName}':
    put:
      tags:
        - AccountTerraformModule
      parameters:
        - name: existingModuleName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleDescriptorUpdate'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '422':
          description: Client Error
  '/api/settings/tfmodules/{moduleName}':
    delete:
      tags:
        - AccountTerraformModule
      parameters:
        - name: moduleName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/achievements':
    get:
      tags:
        - Achievements
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.AchievementInfo'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/agent/cluster/status:
    get:
      tags:
        - AgentConnector
      parameters:
        - name: cluster_id
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  '/api/approvals/{approval_request_id}/update-status':
    put:
      tags:
        - Approval
      parameters:
        - name: approval_request_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.UpdateApprovalStatusRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.ApprovalRequest'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/approval':
    get:
      tags:
        - Approval
      parameters:
        - name: environment_id
          in: path
          required: true
          schema:
            type: string
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.ApprovalRequest'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/cancel-request':
    delete:
      tags:
        - Approval
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CancelApprovalRequestRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.ApprovalRequest'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/launch-approved':
    post:
      tags:
        - Approval
      parameters:
        - name: environment_id
          in: path
          required: true
          schema:
            type: string
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.ApprovalRequest'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/update-status':
    put:
      tags:
        - Approval
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.UpdateApprovalStatusRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.ApprovalRequest'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/approval/providers:
    get:
      tags:
        - ApprovalProvider
      responses:
        '200':
          description: Success
    put:
      tags:
        - ApprovalProvider
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.Providers.UpdateApprovalProviderRequest'
                - $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.Providers.UpdateServiceNowApprovalProviderRequest'
                - $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.Providers.UpdateTorqueApprovalProviderRequest'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ApprovalProvider
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/artifactrepos':
    get:
      tags:
        - ArtifactsRepository
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ArtifactsRepoResponse'
    delete:
      tags:
        - ArtifactsRepository
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/artifactrepos/{cloudAccountName}/storage':
    get:
      tags:
        - ArtifactsRepository
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: cloudAccountName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  '/api/spaces/{space_name}/artifactrepos/artifactory':
    post:
      tags:
        - ArtifactsRepository
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AddArtifactoryRepoRequest'
              description: Add Artifactory repository request
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/artifactrepos/awss3':
    post:
      tags:
        - ArtifactsRepository
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AddS3ArtifactsRepoRequest'
              description: Add S3 artifacts repo request
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/artifactrepos/azurestorage':
    post:
      tags:
        - ArtifactsRepository
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.Artifacts.Repository.Azure.AddAzureStorageRequest'
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/blueprints':
    get:
      tags:
        - Blueprint
      summary: Get all blueprints
      description: 'Returns a list of all blueprints in the space, including sample blueprints.'
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the desired blueprints
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintForGetAllResponse'
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - Blueprint
      description: 'Creates blueprints from discovered assets in repo, such as terraform modules, or helm charts.'
      parameters:
        - name: space_name
          in: path
          description: Name of the space in which to create the blueprints
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.BlueprintsAutoDiscovery.CreateBlueprintsFromCandidatesRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CreateBlueprintsFromCandidatesResponse'
        '404':
          description: Space not found
  '/api/spaces/{space_name}/blueprints/{blueprint_name}/{branch}/files':
    get:
      tags:
        - Blueprint
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          required: true
          schema:
            type: string
        - name: branch
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintFileResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/blueprints/{blueprint_name}/editable':
    get:
      tags:
        - Blueprint
      description: Returns the content of the requested blueprint.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the desired blueprints
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          description: Blueprint name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintContentResponse'
        '422':
          description: Blueprint is not editable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    put:
      tags:
        - Blueprint
      description: Update the content of the blueprint.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the desired blueprints
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          description: Blueprint name
          required: true
          schema:
            type: string
      requestBody:
        description: The blueprint content
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.UpdatedBlueprint'
      responses:
        '200':
          description: Success
        '422':
          description: Blueprint is not editable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Blueprint
      description: Delete a blueprint.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the desired blueprints
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          description: Blueprint name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '422':
          description: Blueprint is not editable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/blueprints/flashcache':
    get:
      tags:
        - Blueprint
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/repositories/{repository_name}/blueprints/{blueprint_name}/{branch}/files':
    get:
      tags:
        - Blueprint
      summary: ''
      parameters:
        - name: space_name
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: branch
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: Blueprint's repository name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintFileResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/repositories/{repositoryName}/blueprints':
    get:
      tags:
        - Blueprint
      description: 'Returns a list of published blueprints in the space, including sample blueprints.'
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the desired blueprints
          required: true
          schema:
            type: string
        - name: repositoryName
          in: path
          description: Name of the repository containing the desired blueprints
          required: true
          schema:
            type: string
        - name: commit
          in: query
          description: "Blueprint commit: any commit name in a related repository<br />\r\n            Optional: default is null"
          schema:
            type: string
        - name: branch
          in: query
          description: "Blueprint branch: any branch name in a related repository<br />\r\n            Optional: default is null"
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintForGetAllResponse'
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/blueprint_candidates':
    get:
      tags:
        - BlueprintCandidate
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: repository_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintsAutoDiscovery.BlueprintCandidateResponse'
  '/api/spaces/{space_name}/validations/blueprints':
    post:
      tags:
        - BlueprintValidation
      summary: Validate blueprint
      description: Runs validation check on a specific blueprint.
      parameters:
        - name: space_name
          in: path
          description: Name of the space that the blueprint is supposed to be in
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Blueprints.V2BlueprintValidation.BlueprintValidationRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Contracts.Blueprints.BlueprintValidationResponse'
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Blueprint data is empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/catalog':
    get:
      tags:
        - Catalog
      summary: Get blueprints in catalog
      description: 'Returns details of all published blueprints in the blueprints catalog, including sample blueprints.'
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the blueprints
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CatalogForGetAllResponse'
                    - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CatalogForGetResponse'
                  description: "Published blueprint information\r\n<remarks>\r\nPublished blueprint is a blueprint that is available in blueprint catalog\r\n</remarks>"
                  x-internal: true
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    put:
      tags:
        - Catalog
      description: Updates blueprint metadata.
      parameters:
        - name: space_name
          in: path
          description: Name of the space that contains the blueprint
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.EditBlueprintMetadataRequest'
              description: Request to edit a blueprint's metadata
      responses:
        '200':
          description: Success
        '404':
          description: Space or blueprint not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - Catalog
      summary: Publish blueprint
      description: Publishes a blueprint to blueprints catalog.
      parameters:
        - name: space_name
          in: path
          description: Name of the space that will contain the blueprint
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AddCatalogRequest'
              description: Request to add a blueprint to blueprint catalog
      responses:
        '200':
          description: Success
        '404':
          description: Space or blueprint not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/catalog/{blueprint_name}':
    get:
      tags:
        - Catalog
      summary: Get blueprint details
      description: Returns details of a published blueprint in blueprints catalog.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the blueprint
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          description: Blueprint name
          required: true
          schema:
            type: string
        - name: repository_name
          in: query
          description: The blueprint's repository name
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintDetailsResponse'
        '404':
          description: 'Space, blueprint, or blueprint in catalog not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Catalog
      summary: Unpublish blueprint
      description: Unpublishes a blueprint from blueprint catalog.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the blueprint
          required: true
          schema:
            type: string
        - name: repository_name
          in: query
          description: Blueprint's repository name
          schema:
            type: string
        - name: blueprint_name
          in: path
          description: Name of the blueprint to be unpublished from blueprints catalog
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Space or blueprint in catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/catalog/approval-required':
    put:
      tags:
        - Catalog
      description: Publishes a blueprint to blueprints catalog.
      parameters:
        - name: space_name
          in: path
          description: Name of the space that will contain the blueprint
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.UpdateBlueprintIsApprovalRequiredRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Space or blueprint not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/settings/cloudaccounts/{serviceType}/renew-cluster-token':
    put:
      tags:
        - ComputeService
      parameters:
        - name: serviceType
          in: path
          required: true
          schema:
            type: string
        - name: computeService
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.RenewClusterTokenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/cloudaccounts/private_cloud:
    post:
      tags:
        - ComputeService
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/computeservices/eks/template:
    get:
      tags:
        - ComputeService
      parameters:
        - name: cloudAccount
          in: query
          schema:
            type: string
        - name: computeService
          in: query
          schema:
            type: string
        - name: sandboxNamespaces
          in: query
          schema:
            type: array
            items:
              type: string
        - name: oidcProviderArn
          in: query
          schema:
            type: string
        - name: policyArn
          in: query
          schema:
            type: string
        - name: permissionsBoundaryArn
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/cost/breakdown':
    get:
      tags:
        - Cost
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: criteria
          in: query
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.CostExplorer.CostBreakdownResult'
                    - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.CostExplorer.AccountCostBreakdownResult'
                  x-internal: true
  '/api/spaces/{space_name}/cost/cloud_accounts':
    get:
      tags:
        - Cost
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CostForecastResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/cost/environments':
    get:
      tags:
        - Cost
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: automation
          in: query
          schema:
            type: boolean
        - name: blueprint_name
          in: query
          schema:
            type: array
            items:
              type: string
        - name: owner
          in: query
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: "Possible values:\r\n<list type=\"bullet\"><item>environment_name</item><item>duration</item><item>cloud_account</item><item>status - when sorting by status descending, the list should match the sandbox list (and ascending will also be based on the same logic) - The logic in the sandbox list groups the sandboxes by status, and sorts by date in each of the groups.</item><item>blueprint_name</item><item>owner</item></list>\r\nFor descending, the user needs to pass a minus sign i.e: sort=-owner, otherwise it is sorted in Ascending order."
          schema:
            type: string
        - name: count
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.History.EnvironmentWithCost'
  '/api/spaces/{space_name}/cost/environments_summary':
    get:
      tags:
        - Cost
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: automation
          in: query
          schema:
            type: boolean
        - name: cloud_account
          in: query
          schema:
            type: array
            items:
              type: string
        - name: blueprint_name
          in: query
          schema:
            type: array
            items:
              type: string
        - name: owner
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.CostExplorer.CostSummaryResult'
  '/api/spaces/{space_name}/cost/export':
    get:
      tags:
        - Cost
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/cost/filter_options':
    get:
      tags:
        - Cost
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: filter
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  '/api/spaces/{space_name}/cost/usage':
    get:
      tags:
        - Cost
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: query
          schema:
            type: string
            format: date-time
        - name: timezone
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.Sandbox.SandboxUsagePerDayResponse'
  /api/settings/costtargets:
    get:
      tags:
        - CostCollectionTarget
      description: Get Cost Collection Targets .
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.CostExplorer.ICloudAccount'
  '/api/settings/costtargets/{name}':
    delete:
      tags:
        - CostCollectionTarget
      description: Delete Cost Collection Target .
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.CostExplorer.ICloudAccount'
  '/api/settings/costtargets/{name}/accessibility':
    put:
      tags:
        - CostCollectionTarget
      description: Set Cost Collection Target accessibility .
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.CostExplorer.Requests.SetCostCollectionTargetAccessibility'
                - $ref: '#/components/schemas/Quali.Colony.CostExplorer.Requests.SetCostCollectionTargetAccessibilityInternal'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.CostExplorer.ICloudAccount'
  '/api/settings/costtargets/{name}/validate':
    get:
      tags:
        - CostCollectionTarget
      description: Validate Cost Collection Target .
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.CostExplorer.ICloudAccount'
  '/api/settings/costtargets/aws/{name}':
    put:
      tags:
        - CostCollectionTarget
      description: Update AWS Cost Collection Target .
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.CostExplorer.Requests.UpdateAwsCostCollectionTarget'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.CostExplorer.ICloudAccount'
  '/api/settings/costtargets/azure/{name}':
    put:
      tags:
        - CostCollectionTarget
      description: Update Azure Cost Collection Target .
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.CostExplorer.Requests.UpdateAzureCostCollectionTarget'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.CostExplorer.ICloudAccount'
  /api/settings/costtargets/execute_kubecost_collect:
    post:
      tags:
        - CostCollectionTarget
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.CostExplorer.KubecostAccount'
      responses:
        '200':
          description: Success
  /api/settings/credentialstore:
    get:
      tags:
        - CredentialStore
      description: Get all credentials.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Responses.CredentialListItemResponse'
    post:
      tags:
        - CredentialStore
      description: Create credential.
      requestBody:
        description: The request to create credential
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.CreateCredentialRequest'
      responses:
        '200':
          description: Success
        '422':
          description: Invalid credential value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/settings/credentialstore/{credential_name}':
    get:
      tags:
        - CredentialStore
      description: Get credential details.
      parameters:
        - name: credential_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Responses.CredentialResponse'
    put:
      tags:
        - CredentialStore
      description: Update credential.
      parameters:
        - name: credential_name
          in: path
          description: The name of the credential we want to update
          required: true
          schema:
            type: string
      requestBody:
        description: The update request
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.UpdateCredentialRequest'
      responses:
        '200':
          description: Success
        '422':
          description: Invalid credential value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - CredentialStore
      description: Delete credential.
      parameters:
        - name: credential_name
          in: path
          description: Credential name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/direct_connect/rdp/{sandboxid}/{iid}':
    get:
      tags:
        - Debugging
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: sandboxid
          in: path
          required: true
          schema:
            type: string
        - name: iid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Controllers.QualiYResult'
  '/api/spaces/{space_name}/direct_connect/rdp/{sandboxid}/{iid}/rdp_file':
    get:
      tags:
        - Debugging
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: sandboxid
          in: path
          required: true
          schema:
            type: string
        - name: iid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Controllers.QualiYResult'
  '/api/spaces/{space_name}/direct_connect/ssh/aws/{sandboxid}/{iid}':
    get:
      tags:
        - Debugging
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: sandboxid
          in: path
          required: true
          schema:
            type: string
        - name: iid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Controllers.QualiYResult'
  '/api/spaces/{space_name}/direct_connect/ssh/aws/{sandboxid}/{iid}/pem_file':
    get:
      tags:
        - Debugging
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: sandboxid
          in: path
          required: true
          schema:
            type: string
        - name: iid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Controllers.QualiYResult'
  '/api/spaces/{space_name}/direct_connect/ssh/azure/{sandboxid}/{iid}':
    get:
      tags:
        - Debugging
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: sandboxid
          in: path
          required: true
          schema:
            type: string
        - name: iid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Controllers.QualiYResult'
  '/api/devx-hub/poc/{sessionId}':
    get:
      tags:
        - DevXHub
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      security: [ ]
  '/api/environment/{feature_name}/check/{token}':
    get:
      tags:
        - Environment
      description: Returns details of environments in context of the specific feature.
      parameters:
        - name: feature_name
          in: path
          description: Name of the space containing the environments
          required: true
          schema:
            type: string
        - name: token
          in: path
          description: Token to check if this endpoint is to be used.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '404':
          description: Space not found
        '422':
          description: Count is above the maximum allowed environments (1000)
  '/api/environment/logs/{step_id}':
    get:
      tags:
        - Environment
      parameters:
        - name: step_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments':
    get:
      tags:
        - Environment
      summary: Get all environments
      description: Returns details of all environments in the space.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the environments
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: "Filter for the environment:\r\n- \"automation\": Environments launched by any automation process in the space\r\n- \"my\": Environments launched by the user\r\n- \"all\": Environments launched by anyone in the space"
          schema:
            type: string
            default: all
        - name: sandbox_name
          in: query
          description: String that all environment names must contain
          schema:
            type: string
        - name: environment_name
          in: query
          description: String that all environment names must contain
          schema:
            type: string
        - name: active_only
          in: query
          description: Only active environments
          schema:
            type: boolean
            default: false
        - name: count
          in: query
          description: Amount of environment to be retrieved
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvironmentListItemResponse'
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Count is above the maximum allowed environments (1000)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - Environment
      summary: Start new environment
      description: Launches a new environment environment in Torque
      parameters:
        - name: space_name
          in: path
          description: Name of the space that should contain the environment
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CreateSandboxRequest'
              description: Request to launch a new sandbox
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CreateEnvResponse'
        '400':
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: User is not permitted to launch environment from branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: 'Space, current user, or compute service user not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Could not processed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '424':
          description: Cloud account not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}':
    get:
      tags:
        - Environment
      summary: Gets environment details
      description: Gets details on an environment
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the environment
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvironmentResponse'
        '404':
          description: Space or environment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '424':
          description: Cloud account is not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Environment
      summary: Terminate environment
      description: Ends a running environment from Torque.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the environment
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Success
        '400':
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: 'Space not found, environment not found, or environment already ended'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '423':
          description: environment already ending or temporarily unavailable for ending
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '424':
          description: Cloud not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/asset_drift/{grain_name}':
    get:
      tags:
        - Environment
      description: Gets asset diff between latest commit and deployed commit of a grain in the environment
      parameters:
        - name: environment_id
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
        - name: grain_name
          in: path
          description: Grain name
          required: true
          schema:
            type: string
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Environment or grain not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/collaborators':
    put:
      tags:
        - Environment
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CollaboratorsRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/driftcheck/{grain_id}':
    post:
      tags:
        - Environment
      description: Initiates a drift check in environmentId on grainPath.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the environments.
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: Environment ID.
          required: true
          schema:
            type: string
        - name: grain_id
          in: path
          description: Grain id or path in environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Grain with specified id doesn't exist in the environment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Failed to process specified grain id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '408':
          description: Request timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/reconcile':
    post:
      tags:
        - Environment
      description: Initiates reconcile action on grains specified in request.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the environments.
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: Environment ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Reconcile environment grains request.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.ReconcileSandboxGrainsRequest'
      responses:
        '200':
          description: Success
        '404':
          description: One of grains in request doesn't exist in environment environmentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Failed to process one of grain ids in request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '408':
          description: Request timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/scheduled_end_time':
    put:
      tags:
        - Environment
      summary: Extend environment
      description: Extends the duration of a running environment
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the environment
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: EnvironmentId ID
          required: true
          schema:
            type: string
        - name: value
          in: query
          description: 'New scheduled end time in ISO 8601 format. For example, 2021-10-06T08:27:05.215Z.'
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvironmentResponse'
        '404':
          description: Space or environment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '424':
          description: Cloud not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '400':
          description: Operation failed
        '422':
          description: '"value" (end time) is empty, not UTC, or time already passed'
  '/api/spaces/{space_name}/environments/{environment_id}/update':
    post:
      tags:
        - Environment
      description: Initiates update action on grains specified in request.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the environments.
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: Environment ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Update environment grains request.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.UpdateSandboxGrainsRequest'
      responses:
        '200':
          description: Success
        '404':
          description: One of grains in request doesn't exist in environment environmentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Failed to process one of grain ids in request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '408':
          description: Request timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/force/{environment_id}':
    delete:
      tags:
        - Environment
      description: Ends a running environment from Torque.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the environment
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Success
        '400':
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: 'Space not found, environment not found, or environment already ended'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '423':
          description: Environment already ending or temporarily unavailable for ending
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '424':
          description: Cloud not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/environmentfeed:
    get:
      tags:
        - EnvironmentFeed
      parameters:
        - name: sandbox_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentFeedResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/events/space:
    get:
      tags:
        - Events
      parameters:
        - name: type
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationTargetType'
      responses:
        '200':
          description: Success
  /api/settings/computeservices:
    get:
      tags:
        - ExecutionHost
      summary: Get execution hosts list
      parameters:
        - name: service_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceResponse'
                    - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceInternalResponse'
                  x-internal: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - ExecutionHost
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateGenericK8SRequest'
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateAmazonEc2Request'
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateVCenterRequest'
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateDockerRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - ExecutionHost
      parameters:
        - name: service_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/settings/computeservices/{service_name}':
    put:
      tags:
        - ExecutionHost
      parameters:
        - name: service_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.UpdateComputeServiceRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/settings/computeservices/{serviceType}/renew-cluster-token':
    put:
      tags:
        - ExecutionHost
      parameters:
        - name: serviceType
          in: path
          required: true
          schema:
            type: string
        - name: computeService
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.RenewClusterTokenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/computeservices/deployment:
    post:
      tags:
        - ExecutionHost
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.K8SGetAgentDeploymentFileRequest'
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.VCenterGetAgentDeploymentFileRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/computeservices/kubecost-access-yaml:
    post:
      tags:
        - ExecutionHost
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.GetKubecostAccessFileRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/settings/executionhosts/deployment/{access_token}/{file_name}':
    get:
      tags:
        - ExecutionHostDeployment
      parameters:
        - name: access_token
          in: path
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  /api/settings/executionhosts/deployment/url:
    post:
      tags:
        - ExecutionHostDeployment
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.K8SGetAgentDeploymentUrlRequest'
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.VCenterGetAgentDeploymentUrlRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Details.GetAgentDeploymentUrlResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/executionhosts/{host_name}/spaces':
    get:
      tags:
        - ExecutionHostSpaces
      parameters:
        - name: host_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.GetSpaceAssociationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/computeservices':
    get:
      tags:
        - ExecutionHostSpaces
      summary: List execution hosts in space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.SpaceComputeServiceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/computeservices/{compute_service}':
    put:
      tags:
        - ExecutionHostSpaces
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: compute_service
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema: { }
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - ExecutionHostSpaces
      summary: Associate execution host with space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: compute_service
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema: { }
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - ExecutionHostSpaces
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: compute_service
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/accounts/{account}/idp_login/{idp_type}':
    get:
      tags:
        - IdentityProvider
      summary: Creates an API session token. Token validity period is 7200 seconds.
      parameters:
        - name: account
          in: path
          description: Account name
          required: true
          schema:
            type: string
        - name: idp_type
          in: path
          description: 'Idp type (ie. GitHub, Bitbucket)'
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect
        '200':
          description: Success
        '401':
          description: Invalid credentials or too many login attempts
        '404':
          description: User not found
      security: [ ]
  '/api/accounts/idp_join/{idp_type}':
    post:
      tags:
        - IdentityProvider
      parameters:
        - name: idp_type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content: { }
      responses:
        '302':
          description: Redirect
      security: [ ]
  '/api/accounts/idp_login/{idp_type}':
    get:
      tags:
        - IdentityProvider
      summary: Creates an API session token. Token validity period is 7200 seconds.
      parameters:
        - name: idp_type
          in: path
          description: 'Idp type (ie. GitHub, Bitbucket)'
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect
        '200':
          description: Success
        '401':
          description: Invalid credentials or too many login attempts
        '404':
          description: User not found
      security: [ ]
  '/api/accounts/idp_register/{idp_type}':
    post:
      tags:
        - IdentityProvider
      parameters:
        - name: idp_type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content: { }
      responses:
        '302':
          description: Redirect
      security: [ ]
  '/api/accounts/idp_signup/{idp_type}':
    post:
      tags:
        - IdentityProvider
      parameters:
        - name: idp_type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content: { }
      responses:
        '302':
          description: Redirect
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  /api/insided/articles:
    get:
      tags:
        - InsidedProxy
      parameters:
        - name: page
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/insided/categories:
    get:
      tags:
        - InsidedProxy
      responses:
        '200':
          description: Success
  '/api/insided/categories/{categoryId}/articles':
    get:
      tags:
        - InsidedProxy
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/insided/productUpdates:
    get:
      tags:
        - InsidedProxy
      parameters:
        - name: page
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/insided/topics:
    get:
      tags:
        - InsidedProxy
      parameters:
        - name: moderatorTags
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
  /api/insided/topics/search:
    get:
      tags:
        - InsidedProxy
      parameters:
        - name: q
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/environments/{environment_id}/introspection_metadata':
    get:
      tags:
        - Introspection
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.Introspection.Responses.EnvironmentIntrospectionMetadataResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/introspection/{grain_path}':
    get:
      tags:
        - Introspection
      description: Gets introspection details of a grain in the environment
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the environment
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
        - name: grain_path
          in: path
          description: 'Unique identifier of a grain within the environment, in format of concatenated grain names, according to their hierarchy, separated by a "." character.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.Introspection.Responses.GrainIntrospectionResponse'
        '404':
          description: Environment or grain not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '409':
          description: Introspection details are not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Grain doesn't support introspection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    put:
      tags:
        - Introspection
      description: Invokes introspection of a grain in the environment
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the environment
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
        - name: grain_path
          in: path
          description: 'Unique identifier of a grain within the environment, in format of concatenated grain names, according to their hierarchy, separated by a "." character.'
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Success
        '404':
          description: Environment or grain not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '409':
          description: Environment or grain state doesn't support introspection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Grain doesn't support introspection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/environments/{environment_id}/introspection/{grain_path}/{resource_name}/power_management':
    get:
      tags:
        - Introspection
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          required: true
          schema:
            type: string
        - name: grain_path
          in: path
          required: true
          schema:
            type: string
        - name: resource_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.Introspection.Responses.GetIntrospectionResourcePowerStatusResponse'
    put:
      tags:
        - Introspection
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          required: true
          schema:
            type: string
        - name: grain_path
          in: path
          required: true
          schema:
            type: string
        - name: resource_name
          in: path
          required: true
          schema:
            type: string
        - name: power_on
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
  /api/events/space/jira:
    get:
      tags:
        - JiraEvents
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/jira':
    get:
      tags:
        - JiraSubscriptions
      summary: Get jira integration details
      parameters:
        - name: space_name
          in: path
          description: Name of space
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraSubscription'
    put:
      tags:
        - JiraSubscriptions
      summary: Update subscription by ID
      parameters:
        - name: space_name
          in: path
          description: Name of target space
          required: true
          schema:
            type: string
      requestBody:
        description: New state of subscription
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/JiraSubscriptionRequest'
                - $ref: '#/components/schemas/JiraSubscription'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: uuid
    post:
      tags:
        - JiraSubscriptions
      summary: Set up jira integration
      parameters:
        - name: space_name
          in: path
          description: Name of space
          required: true
          schema:
            type: string
      requestBody:
        description: Jira configuration data
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/JiraSubscriptionRequest'
                - $ref: '#/components/schemas/JiraSubscription'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: uuid
    delete:
      tags:
        - JiraSubscriptions
      summary: Delete integration
      parameters:
        - name: space_name
          in: path
          description: Name of target space
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: uuid
  '/api/spaces/{space_name}/jira/setEnabled':
    patch:
      tags:
        - JiraSubscriptions
      summary: Change enabled
      parameters:
        - name: space_name
          in: path
          description: Name of space
          required: true
          schema:
            type: string
        - name: newValue
          in: query
          description: New value that would be set for subscription
          schema:
            type: boolean
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: uuid
  '/api/spaces/{space_name}/jira/test':
    post:
      tags:
        - JiraSubscriptions
      summary: Test webhook without saving it the database.
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Subscription prototype
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JiraSubscriptionTestRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
  '/api/executionhosts/k8s/{execution_host}/agent/namespaces':
    get:
      tags:
        - K8sExecutionHostAgent
      parameters:
        - name: execution_host
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.k8s.GetAgentNamespacesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/executionhosts/k8s/{execution_host}/agent/namespaces/{namespace}/serviceaccounts':
    get:
      tags:
        - K8sExecutionHostAgent
      parameters:
        - name: execution_host
          in: path
          required: true
          schema:
            type: string
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.k8s.GetAgentServiceAccountsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/executionhosts/k8s/{execution_host}/spaces/{space_name}':
    put:
      tags:
        - K8sExecutionHostSpaces
      parameters:
        - name: execution_host
          in: path
          required: true
          schema:
            type: string
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.K8sSpaceAssociationSpec'
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.AksSpaceAssociationSpec'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - K8sExecutionHostSpaces
      summary: Associate k8s execution host with space
      parameters:
        - name: execution_host
          in: path
          required: true
          schema:
            type: string
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.K8sSpaceAssociationSpec'
                - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.AksSpaceAssociationSpec'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - K8sExecutionHostSpaces
      parameters:
        - name: execution_host
          in: path
          required: true
          schema:
            type: string
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/labels':
    get:
      tags:
        - Labels
      description: Returns all labels for a space
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the labels
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabelDetails'
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - Labels
      description: Add a new label.
      parameters:
        - name: space_name
          in: path
          description: Name of the space in which to create the label
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Labels.AddLabelRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/labels/{label_name}':
    put:
      tags:
        - Labels
      description: Updates an existing label.
      parameters:
        - name: space_name
          in: path
          description: Name of the space that contains the label
          required: true
          schema:
            type: string
        - name: label_name
          in: path
          description: Name of the label to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Labels.EditLabelRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Space or label not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Labels
      description: Deletes an existing label.
      parameters:
        - name: space_name
          in: path
          description: Name of the space that contains the label
          required: true
          schema:
            type: string
        - name: label_name
          in: path
          description: The name of the label we want to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Space or label not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/long-token/{space_name}/{token_id}':
    delete:
      tags:
        - LongToken
      description: Cancels the current long token API session (nullifies the active long token)
      parameters:
        - name: token_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Failed to revoke long access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/long-token/{space_name}/longtoken':
    post:
      tags:
        - LongToken
      description: Requests a long-lived access token. Token validity period is 2147483647 seconds.
      parameters:
        - name: title
          in: query
          schema:
            type: string
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.TokenResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/long-token/{space_name}/longtokens':
    get:
      tags:
        - LongToken
      description: Gets a list of long tokens created by uses with space access.
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.LongTokenSafeResponse'
                    - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.LongTokenResponse'
                  x-internal: true
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/long-token/longtokens:
    get:
      tags:
        - LongToken
      description: Gets a list of long tokens for current user
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.LongTokenSafeResponse'
                    - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.LongTokenResponse'
                  x-internal: true
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/OauthRedirect:
    get:
      tags:
        - OauthRedirect
      parameters:
        - name: state
          in: query
          schema:
            type: string
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  '/api/OauthRedirect/{account}':
    get:
      tags:
        - OauthRedirect
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  /api/settings/parameters:
    get:
      tags:
        - ParameterStore
      description: Gets all parameters from Parameter Store.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.ParameterStoreItemResponse'
                    - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.SpaceParameterStoreItemResponse'
                  description: Parameter Store item information
                  x-internal: true
    post:
      tags:
        - ParameterStore
      description: Adds a parameter to Parameter Store.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.AddParameterRequest'
              description: Request to add parameter to Parameter Store
      responses:
        '200':
          description: Success
        '422':
          description: Invalid parameter value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/settings/parameters/{param_name}':
    get:
      tags:
        - ParameterStore
      description: Gets a parameter from Parameter Store.
      parameters:
        - name: param_name
          in: path
          description: Parameter name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.ParameterStoreItemResponse'
                  - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.SpaceParameterStoreItemResponse'
                description: Parameter Store item information
                x-internal: true
        '404':
          description: Parameter not found in Parameter Store
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    put:
      tags:
        - ParameterStore
      description: Update a parameter in Parameter Store.
      parameters:
        - name: param_name
          in: path
          description: Parameter Name
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.UpdateParameterRequest'
              description: Request to update parameter in Parameter Store
      responses:
        '200':
          description: Success
        '404':
          description: Parameter not found in Parameter Store
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - ParameterStore
      description: Deletes a parameter from Parameter Store.
      parameters:
        - name: param_name
          in: path
          description: Parameter name
          required: true
          schema:
            type: string
      responses:
        '404':
          description: Parameter not found in Parameter Store
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '200':
          description: Success
  '/api/spaces/{space_name}/settings/parameters':
    get:
      tags:
        - ParameterStoreSpace
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.SpaceParameterStoreItemResponse'
    post:
      tags:
        - ParameterStoreSpace
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.AddParameterRequest'
              description: Request to add parameter to Parameter Store
      responses:
        '200':
          description: Success
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/settings/parameters/{param_name}':
    get:
      tags:
        - ParameterStoreSpace
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: param_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.SpaceParameterStoreItemResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    put:
      tags:
        - ParameterStoreSpace
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: param_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.UpdateParameterRequest'
              description: Request to update parameter in Parameter Store
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - ParameterStoreSpace
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: param_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/repositories/{repository_name}/blueprints/{blueprint_name}/policies':
    get:
      tags:
        - Policy
      description: "Get blueprint policy.\r\nRelevant only for blueprints in repository for environment."
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the desired blueprint
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: Blueprint's repository name
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          description: Name of the blueprint
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintPolicyResponse'
        '404':
          description: Space or blueprint not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Blueprint belongs to production repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    put:
      tags:
        - Policy
      description: Update policies of a blueprint. Relevant only for blueprints in an environment repository.
      parameters:
        - name: space_name
          in: path
          description: Name of the space where the blueprint resides
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: Blueprint's repository name
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          description: Blueprint name
          required: true
          schema:
            type: string
      requestBody:
        description: Update blueprint policy request
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.UpdateBlueprintPolicyRequest'
              description: Update Blueprint policy request
      responses:
        '200':
          description: Success
        '422':
          description: 'Required parameters are missing, max duration too short or blueprint belongs to production repository'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: Space or blueprint not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Policy
      description: Reset blueprint policies to the default behavior. Max duration will be cleared.
      parameters:
        - name: space_name
          in: path
          description: Name of the space where the blueprint resides
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: Blueprint's repository name
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          description: Blueprint name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Space or blueprint not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Blueprint belongs to production repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/product_announcements/productUpdates:
    get:
      tags:
        - ProductAnnouncements
      summary: "Returns the items under the Announcements category:\r\nhttps://github.com/QualiTorque/qualitorque.github.io/discussions/categories/announcements"
      parameters:
        - name: itemCount
          in: query
          description: the amount of items to be returned
          schema:
            type: string
        - name: after
          in: query
          description: the cursor field value of the last item you got
          schema:
            maxLength: 56
            minLength: 0
            type: string
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/connect/{protocol}':
    get:
      tags:
        - QualiY
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: protocol
          in: path
          required: true
          schema:
            type: string
        - name: iid
          in: query
          schema:
            type: string
        - name: sandboxId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Controllers.QualiYResult'
  /api/settings/repository_providers:
    get:
      tags:
        - RepositoryProviders
      responses:
        '202':
          description: Success
        '400':
          description: Bad Request
    post:
      tags:
        - RepositoryProviders
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Blueprints.Contracts.Requests.Repository.CreateRepositoryProviderRequest'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
  '/api/settings/repository_providers/{name}':
    get:
      tags:
        - RepositoryProviders
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
    delete:
      tags:
        - RepositoryProviders
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
  '/api/sandbox/{sandbox_id}/logs/{activity_id}':
    get:
      tags:
        - Sandbox
      parameters:
        - name: sandbox_id
          in: path
          required: true
          schema:
            type: string
        - name: activity_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/sandbox':
    get:
      tags:
        - Sandbox
      description: Returns details of all sandboxes in the space.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the sandboxes
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: "Filter for the environment:\r\n- \"automation\": Sandboxes launched by any automation process in the space\r\n- \"my\": Sandboxes launched by the user\r\n- \"all\": Sandboxes launched by anyone in the space"
          schema:
            type: string
            default: all
        - name: sandbox_name
          in: query
          description: String that all sandbox names must contain
          schema:
            type: string
        - name: count
          in: query
          description: Amount of sandboxes to be retrieved
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.SandboxResponseListItem'
        '404':
          description: Space not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Count is above the maximum allowed sandboxes (1000)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - Sandbox
      description: Launches a new sandbox environment in Torque
      parameters:
        - name: space_name
          in: path
          description: Name of the space that should contain the sandbox environment
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CreateSandboxRequest'
              description: Request to launch a new sandbox
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CreateEnvResponse'
        '400':
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: User is not permitted to launch sandbox from branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: 'Space, current user, or compute service user not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Could not processed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '424':
          description: Cloud account not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/sandbox/{sandbox_id}':
    get:
      tags:
        - Sandbox
      description: Gets details on a sandbox.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the sandbox
          required: true
          schema:
            type: string
        - name: sandbox_id
          in: path
          description: Sandbox ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.SandboxResponse'
        '404':
          description: Space or sandbox not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '424':
          description: Cloud account is not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Sandbox
      description: Ends a running sandbox from Torque.
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the sandbox
          required: true
          schema:
            type: string
        - name: sandbox_id
          in: path
          description: Sandbox ID
          required: true
          schema:
            type: string
        - name: ignore_errors
          in: query
          description: 'Should ignore errors during termination, if set to true then if termination of the sandbox failed it will be accepted as termination succeeded.'
          schema:
            type: string
      responses:
        '202':
          description: Success
        '400':
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: 'Space not found, sandbox not found, or sandbox already ended'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Invalid "ignore_errors" value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '423':
          description: Sandbox already ending or temporarily unavailable for ending
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '424':
          description: Cloud not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/sandbox/{sandbox_id}/debuggingservice':
    put:
      tags:
        - Sandbox
      description: This API requires Bastion to be deployed in the sandbox environment
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the sandbox
          required: true
          schema:
            type: string
        - name: sandbox_id
          in: path
          description: Sandbox ID
          required: true
          schema:
            type: string
        - name: value
          in: query
          description: 'Indicates if to enable/disable the debugging service: "on" or "off"'
          schema:
            type: string
      responses:
        '200':
          description: Success
        '202':
          description: Request is in progress or triggered
        '400':
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: 'Space not found, sandbox not found, or debugging service is disabled'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '409':
          description: The current status of the debugging service is conflicted with the new status request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: '"value" is empty or invalid'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '424':
          description: Cloud not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/sandbox/{sandbox_id}/scheduled_end_time':
    put:
      tags:
        - Sandbox
      description: Extends the duration of a running sandbox
      parameters:
        - name: space_name
          in: path
          description: Name of the space containing the sandbox
          required: true
          schema:
            type: string
        - name: sandbox_id
          in: path
          description: Sandbox ID
          required: true
          schema:
            type: string
        - name: value
          in: query
          description: 'New scheduled end time in ISO 8601 format. For example, 2021-10-06T08:27:05.215Z.'
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
        '400':
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: Space or sandbox not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: '"value" (end time) is empty, not UTC, or time already passed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '424':
          description: Cloud not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/sandbox/{sandboxId}/logs/preparetags':
    get:
      tags:
        - Sandbox
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: sandboxId
          in: path
          required: true
          schema:
            type: string
        - name: service_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/sandbox/{sandboxId}/logs/tfapply':
    get:
      tags:
        - Sandbox
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: sandboxId
          in: path
          required: true
          schema:
            type: string
        - name: service_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/sandbox/{sandboxId}/logs/tfdestroy':
    get:
      tags:
        - Sandbox
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: sandboxId
          in: path
          required: true
          schema:
            type: string
        - name: service_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/sandbox/{sandboxId}/logs/tfinit':
    get:
      tags:
        - Sandbox
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: sandboxId
          in: path
          required: true
          schema:
            type: string
        - name: service_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/sandbox/{sandboxId}/logs/tfplan':
    get:
      tags:
        - Sandbox
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: sandboxId
          in: path
          required: true
          schema:
            type: string
        - name: service_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/accountroles:
    get:
      tags:
        - Settings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.RoleListItemResponse'
  /api/settings/audit/config:
    get:
      tags:
        - Settings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Audit.Contracts.AuditProviderConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    put:
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Audit.Contracts.AuditProviderConfig'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/settings/audit/config/{provider_type}':
    delete:
      tags:
        - Settings
      parameters:
        - name: provider_type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Audit.Contracts.AuditProviderConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/audit/config/test:
    post:
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Audit.Contracts.AuditProviderConfig'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/cloudaccounts:
    get:
      tags:
        - Settings
      summary: Get list of cloud providers accounts assosiated with a Colony account
      parameters:
        - name: withoutMocks
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountInAccountResponse'
    post:
      tags:
        - Settings
      summary: ''
      requestBody:
        description: request data
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AddCloudAccountRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.DeleteCloudAccountRequest'
              description: Request to delete a cloud account from Colony account of the customer
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/settings/cloudaccounts/{cloud_account_name}':
    put:
      tags:
        - Settings
      summary: Update existing Colony customer's account
      parameters:
        - name: cloud_account_name
          in: path
          description: Cloud account name to be updated
          required: true
          schema:
            type: string
        - name: new_name
          in: query
          description: Cloud account new name
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/settings/cloudaccounts/{cloud_account_name}/verify':
    put:
      tags:
        - Settings
      parameters:
        - name: cloud_account_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.VerifyCloudProviderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/cloudaccounts/aws:
    post:
      tags:
        - Settings
      summary: Associate AWS account with Colony customer's account
      requestBody:
        description: Request data
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AddAwsAccountRequest'
              description: Request to associate aws account with Colony account of the customer
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/cloudaccounts/aws/k8s/template:
    get:
      tags:
        - Settings
      parameters:
        - name: cloudAccount
          in: query
          schema:
            type: string
        - name: computeService
          in: query
          schema:
            type: string
        - name: sandboxNamespaces
          in: query
          schema:
            type: array
            items:
              type: string
        - name: oidcProviderArn
          in: query
          schema:
            type: string
        - name: policyArn
          in: query
          schema:
            type: string
        - name: permissionsBoundaryArn
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TemplateUrl'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/cloudaccounts/aws/template:
    get:
      tags:
        - Settings
      parameters:
        - name: external_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TemplateUrl'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/cloudaccounts/azure:
    post:
      tags:
        - Settings
      summary: Assosiate Azure account with Colony customer's account
      requestBody:
        description: Request data
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AddAzureAccountRequest'
              description: Request to associate azure account with Colony account of the customer
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/cloudaccounts/gcp_stub:
    post:
      tags:
        - Settings
      summary: Create a stub GCP account
      requestBody:
        description: Request data
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AddGcpAccountRequest'
              description: Request to associate gcp account with Colony account of the customer
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/cloudproviders:
    get:
      tags:
        - Settings
      summary: Get list of cloud providers default spec
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudSpecsResponse'
  /api/settings/cloudproviders/aws:
    get:
      tags:
        - Settings
      description: Get AWS cloud provider settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AwsCloudProviderSettingsModel'
    put:
      tags:
        - Settings
      description: Set AWS cloud provider settings.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AwsCloudProviderSettingsModel'
              description: AWS cloud provider settings model
      responses:
        '200':
          description: Success
  '/api/settings/cloudproviders/vcenter/{vcenter_id}/settings':
    get:
      tags:
        - Settings
      description: Get vCenter settings for the current account
      parameters:
        - name: vcenter_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
    put:
      tags:
        - Settings
      description: Set vCenter settings for the current account
      parameters:
        - name: vcenter_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.vCenter.VcenterSettingsModel'
      responses:
        '200':
          description: Success
  /api/settings/spaceroles:
    get:
      tags:
        - Settings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.RoleListItemResponse'
  /api/settings/status:
    get:
      tags:
        - Settings
      responses:
        '202':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/settings/tfversion:
    get:
      tags:
        - Settings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/spaces:
    get:
      tags:
        - Space
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Space.SpaceListItemResponse'
    post:
      tags:
        - Space
      summary: Create Space
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Space.CreateSpaceRequest'
      responses:
        '200':
          description: Success
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}':
    get:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Space.GetSpaceResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    put:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Space.UpdateSpaceRequest'
      responses:
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '200':
          description: Success
    delete:
      tags:
        - Space
      summary: Delete Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/cloud_accounts':
    get:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: withoutMocks
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountInSpaceResponse'
    post:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: allowMocks
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AddCloudAccountToSpaceRequest'
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/cloud_accounts/{cloud_account_name}/regions':
    get:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: cloud_account_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.RegionResponse'
  '/api/spaces/{space_name}/cloud_accounts/{cloud_account}':
    put:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: cloud_account
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.UpdateSpaceCloudAccountRequest'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: cloud_account
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/cloud_accounts/AWS/{cloud_account_name}/regions/{region_id}/instance_types':
    get:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: cloud_account_name
          in: path
          required: true
          schema:
            type: string
        - name: region_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountInSpaceResponse'
  '/api/spaces/{space_name}/cloud_accounts/AWS/{cloud_account_name}/regions/{region_id}/private_images':
    get:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: cloud_account_name
          in: path
          required: true
          schema:
            type: string
        - name: region_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountInSpaceResponse'
  '/api/spaces/{space_name}/customization':
    put:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Space.CustomizeSpaceRequest'
      responses:
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '200':
          description: Success
  '/api/spaces/{space_name}/repositories':
    get:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
    post:
      tags:
        - Space
      summary: Add repo to space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Blueprints.Contracts.Requests.Repository.CreateOrUpdateRepositoryRequest'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CreateRepositoryResponse'
        '400':
          description: Bad Request
    delete:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: repository_name
          in: query
          schema:
            type: string
      responses:
        '202':
          description: Success
        '400':
          description: Bad Request
  '/api/spaces/{space_name}/repositories/azure':
    post:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AuthorizeAddAzureRepositoryRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CreateRepositoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/repositories/bitbucket':
    post:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AuthorizeAddBitBucketRepositoryRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CreateRepositoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/repositories/bitbucketServer':
    post:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AuthorizeAddBitBucketServerRepositoryRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CreateRepositoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/repositories/github':
    post:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AuthorizeAddGithubRepositoryRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CreateRepositoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/repositories/gitlab':
    post:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AuthorizeAddGitLabRepositoryRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CreateRepositoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/repositories/gitlabenterprise':
    post:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AuthorizeAddGitLabEnterpriseRepositoryRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CreateRepositoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/repositories/repository':
    get:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: repository_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
  '/api/spaces/{space_name}/user_permissions':
    get:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/users':
    get:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.UserPermittedToSpaceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.UserSpaceRoleRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/users/{user_email}':
    delete:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: user_email
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/users/{user_email}/space_role':
    put:
      tags:
        - Space
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: user_email
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/helmcharts':
    get:
      tags:
        - SpaceHelmChart
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    post:
      tags:
        - SpaceHelmChart
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.HelmCharts.HelmChartDescriptorRequest'
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/helmcharts/{chart_name}':
    get:
      tags:
        - SpaceHelmChart
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: chart_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      tags:
        - SpaceHelmChart
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: chart_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.HelmCharts.HelmChartDescriptorRequest'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - SpaceHelmChart
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: chart_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/tfmodules/attached':
    get:
      tags:
        - SpaceTerraformModule
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.TerraformModules.SpaceTerraformModuleResponse'
    post:
      tags:
        - SpaceTerraformModule
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.TerraformModules.AddSpaceTerraformModuleRequest'
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/tfmodules/attached/{module_alias}':
    put:
      tags:
        - SpaceTerraformModule
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: module_alias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.TerraformModules.UpdateSpaceTerraformModuleRequest'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - SpaceTerraformModule
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: module_alias
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/spaces/{space_name}/tfmodules/available':
    get:
      tags:
        - SpaceTerraformModule
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.Blueprint.TerraformModuleDescriptorResponse'
  /api/accounts/signout:
    get:
      tags:
        - SSOAccount
      responses:
        '200':
          description: Success
      security: [ ]
  /api/accounts/ssologin:
    get:
      tags:
        - SSOAccount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.TokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  /api_reference:
    get:
      tags:
        - Stoplight
      responses:
        '200':
          description: Success
      security: [ ]
  '/api/spaces/{space_name}/subscriptions':
    get:
      tags:
        - Subscriptions
      summary: Get all subscriptions in the space
      parameters:
        - name: space_name
          in: path
          description: Name of space
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationSubscription'
    put:
      tags:
        - Subscriptions
      summary: Update subscription by ID
      parameters:
        - name: space_name
          in: path
          description: Name of target space
          required: true
          schema:
            type: string
        - name: subscriptionId
          in: query
          description: Id of target subscription
          schema:
            type: string
            format: uuid
      requestBody:
        description: New state of subscription
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationSubscriptionRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: uuid
    post:
      tags:
        - Subscriptions
      summary: Creates new subscription for space events
      parameters:
        - name: space_name
          in: path
          description: Name of space
          required: true
          schema:
            type: string
      requestBody:
        description: Subscription data
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationSubscriptionRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: uuid
    delete:
      tags:
        - Subscriptions
      summary: Delete subscription by ID
      parameters:
        - name: space_name
          in: path
          description: Name of target space
          required: true
          schema:
            type: string
        - name: subscriptionId
          in: query
          description: Id of target subscription
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: uuid
  '/api/spaces/{space_name}/subscriptions/setEnabled':
    patch:
      tags:
        - Subscriptions
      summary: Change enabled by subscription ID
      parameters:
        - name: space_name
          in: path
          description: Name of space
          required: true
          schema:
            type: string
        - name: subscriptionId
          in: query
          description: Subscription id to switch state
          schema:
            type: string
            format: uuid
        - name: newValue
          in: query
          description: New value that would be set for subscription
          schema:
            type: boolean
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: uuid
  '/api/spaces/{space_name}/subscriptions/test':
    post:
      tags:
        - Subscriptions
      summary: Test webhook without saving it the database.
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Subscription prototype
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationSubscriptionTestRequest'
                - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.BaseNotificationSubscription'
                - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationSubscription'
                - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationSubscriptionRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '200':
          description: Success
  /api/settings/tags:
    get:
      tags:
        - Tag
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TagWithStatisticsResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - Tag
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagUpdateRequest'
      responses:
        '200':
          description: Success
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/settings/tags/{name}':
    put:
      tags:
        - Tag
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagUpdateRequest'
      responses:
        '200':
          description: Success
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Tag
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/repositories/{repository_name}/blueprints/{blueprint_name}/settings/tags':
    get:
      tags:
        - Tag
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TagOverrideResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - Tag
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagOverrideRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagUpdateRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/repositories/{repository_name}/blueprints/{blueprint_name}/settings/tags/{name}':
    put:
      tags:
        - Tag
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagValueRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagOverrideRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagUpdateRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Tag
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          required: true
          schema:
            type: string
        - name: blueprint_name
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/settings/tags':
    get:
      tags:
        - Tag
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TagOverrideResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    post:
      tags:
        - Tag
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagOverrideRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagUpdateRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/settings/tags/{name}':
    put:
      tags:
        - Tag
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagValueRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagOverrideRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagRequest'
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagUpdateRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - Tag
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/token/longtoken:
    post:
      tags:
        - Token
      description: Requests a long-lived access token. Token validity period is 2147483647 seconds.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.TokenResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/token/refresh:
    post:
      tags:
        - Token
      description: Extends an existing session. Use the new access token returned in the method’s response to reauthorize the session.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Controllers.TokenController+RefreshTokenModel'
              description: Model of refresh_token returned in the response of login method
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.TokenResponse'
        '422':
          description: Refresh token is invalid or was not given
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
      security: [ ]
  /api/token/revoke:
    post:
      tags:
        - Token
      description: Cancels the current API session (nullifies the active access token)
      responses:
        '200':
          description: Success
        '422':
          description: Failed to revoke access or refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/token/revokelongtoken:
    post:
      tags:
        - Token
      description: Cancels the current long token API session (nullifies the active long token)
      responses:
        '200':
          description: Success
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Failed to revoke long access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/accounts/user_spaces:
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.SpaceMetadataResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/accounts/users:
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.UserForAllUsersResponse'
  '/api/accounts/users/{user_email}/account_role':
    put:
      tags:
        - User
      parameters:
        - name: user_email
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - User
      parameters:
        - name: user_email
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/accounts/users/{userEmail}':
    delete:
      tags:
        - User
      parameters:
        - name: userEmail
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  /api/accounts/users/update_user:
    put:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Quali.Colony.Accounts.Contracts.Users.UpdateUserRequest'
                - $ref: '#/components/schemas/Quali.Colony.Accounts.Contracts.Users.UpdateUserInnerRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/views':
    get:
      tags:
        - View
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
            default: all
        - name: view_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ViewListItemResponse'
    post:
      tags:
        - View
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Views.Contracts.CreateViewRequest'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CreateViewResponse'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/views/{view_id}':
    get:
      tags:
        - View
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: view_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ViewItemResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
    delete:
      tags:
        - View
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: view_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/views/{view_id}/driftcheck':
    post:
      tags:
        - View
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: view_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CheckDriftRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/views/{view_id}/environment/{env_id}':
    delete:
      tags:
        - View
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: view_id
          in: path
          required: true
          schema:
            type: string
        - name: env_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/views/{view_id}/environments':
    post:
      tags:
        - View
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: view_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.AddEnvironmentsToViewRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/views/{view_id}/reconcile':
    post:
      tags:
        - View
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: view_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.ReconcileDriftRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
  '/api/spaces/{space_name}/views/{view_id}/update':
    post:
      tags:
        - View
      parameters:
        - name: space_name
          in: path
          required: true
          schema:
            type: string
        - name: view_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.UpdateEnvironmentsRequest'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quali.Colony.Web.Response.ErrorResponse'
components:
  schemas:
    JiraSubscription:
      type: object
      allOf:
        - $ref: '#/components/schemas/JiraSubscriptionRequest'
      properties:
        id:
          type: string
          format: uuid
        space_id:
          type: string
          nullable: true
        is_enabled:
          type: boolean
      additionalProperties: false
    JiraSubscriptionRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/JiraSubscriptionRequestBase'
      additionalProperties: false
    JiraSubscriptionRequestBase:
      type: object
      properties:
        event_types:
          type: array
          items:
            type: string
          nullable: true
        jira_uri:
          type: string
          nullable: true
        jira_auth_email:
          type: string
          nullable: true
        jira_auth_token:
          type: string
          nullable: true
        jira_projects:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    JiraSubscriptionTestRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/JiraSubscriptionRequestBase'
      properties:
        issue_id:
          type: string
          nullable: true
      additionalProperties: false
    LabelDetails:
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      additionalProperties: false
    Quali.Colony.Abstractions.Exceptions.Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
          nullable: true
        name:
          type: string
          description: Error name
          nullable: true
        code:
          type: string
          description: Error code
          nullable: true
      additionalProperties: false
      description: Error information
      x-internal: true
    Quali.Colony.Accounts.Contracts.Users.UpdateUserInnerRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Accounts.Contracts.Users.UpdateUserRequest'
      properties:
        email:
          type: string
          nullable: true
        account_id:
          type: string
          format: uuid
      additionalProperties: false
      x-internal: true
    Quali.Colony.Accounts.Contracts.Users.UpdateUserRequest:
      type: object
      properties:
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        timezone:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    'Quali.Colony.Contracts.Blueprints.BaseEnum`1[[Quali.Colony.Contracts.Blueprints.BlueprintInputType, Quali.Colony.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]':
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.Blueprints.BlueprintCostResponse:
      type: object
      properties:
        average_hourly_cost:
          type: number
          format: double
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.Blueprints.BlueprintGrainForList:
      type: object
      properties:
        name:
          type: string
          nullable: true
        kind:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.Blueprints.BlueprintInputType:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Contracts.Blueprints.BaseEnum`1[[Quali.Colony.Contracts.Blueprints.BlueprintInputType, Quali.Colony.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.Blueprints.BlueprintValidationResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Abstractions.Exceptions.Error'
          nullable: true
      additionalProperties: false
      description: Blueprint validation response
      x-internal: true
    Quali.Colony.Contracts.Blueprints.EnvironmentType:
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.Blueprints.OutputKind:
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.BlueprintsV2.BlueprintDetails:
      type: object
      properties:
        name:
          type: string
          nullable: true
        repository_branch:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        repository_url:
          type: string
          nullable: true
        repository_name:
          type: string
          nullable: true
        is_editable:
          type: boolean
        description:
          type: string
          nullable: true
        spec:
          type: string
          nullable: true
        last_modified:
          type: string
          format: date-time
        modified_by:
          type: string
          nullable: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintInputParameterResponse'
          nullable: true
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintOutputParameterResponse'
          nullable: true
        color:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintLabel'
          nullable: true
        enabled:
          type: boolean
        is_approval_required:
          type: boolean
        cost:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.Blueprints.BlueprintCostResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.BlueprintsV2.BlueprintDetailsResponse:
      type: object
      properties:
        details:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintDetails'
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintTag'
          nullable: true
        policies:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintPolicy'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.BlueprintsV2.BlueprintInputParameter:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.Blueprints.BlueprintInputType'
          nullable: true
        default_value:
          type: string
          nullable: true
        has_default_value:
          type: boolean
          description: 'Indicates whether default value was defined in the yaml, even if it is not returned in the default_value field (e.g. when sensitive)'
        sensitive:
          type: boolean
        description:
          type: string
          nullable: true
        allowed_values:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.BlueprintsV2.BlueprintInputParameterResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintInputParameter'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.BlueprintsV2.BlueprintLabel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.BlueprintsV2.BlueprintOutputParameter:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        kind:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.Blueprints.OutputKind'
          nullable: true
        display_style:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.BlueprintsV2.BlueprintOutputParameterResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintOutputParameter'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.BlueprintsV2.BlueprintPolicy:
      type: object
      properties:
        max_duration:
          type: string
          format: date-span
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.BlueprintsV2.BlueprintTag:
      type: object
      properties:
        name:
          type: string
          nullable: true
        default_value:
          type: string
          nullable: true
        possible_values:
          type: array
          items:
            type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.Services.ServiceStatus:
      type: object
      additionalProperties: false
      description: 'Status of service ("Pending", "Aborted", "Done", etc.)'
      x-internal: true
    Quali.Colony.Contracts.Services.ServiceTerraformProgress:
      type: object
      properties:
        prepare_tags:
          type: string
          nullable: true
        terraform_init:
          type: string
          nullable: true
        terraform_plan:
          type: string
          nullable: true
        terraform_apply:
          type: string
          nullable: true
        terraform_destroy:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Contracts.Services.ServiceType:
      type: object
      additionalProperties: false
      description: 'Service type ("All", "Terraform", "Unknown", etc.)'
      x-internal: true
    Quali.Colony.Contracts.Tags.TagType:
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.CostExplorer.ICloudAccount:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        accountId:
          type: string
          format: uuid
      additionalProperties: false
      x-internal: true
    Quali.Colony.CostExplorer.KubecostAccount:
      type: object
      properties:
        id:
          type: string
          nullable: true
        accountId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        kubeCostServerAndPort:
          type: string
          nullable: true
        kubecostNamespace:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.CostExplorer.Requests.SetCostCollectionTargetAccessibility:
      type: object
      properties:
        accessible:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.CostExplorer.Requests.SetCostCollectionTargetAccessibilityInternal:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.CostExplorer.Requests.SetCostCollectionTargetAccessibility'
      properties:
        account_id:
          type: string
          format: uuid
      additionalProperties: false
      x-internal: true
    Quali.Colony.CostExplorer.Requests.UpdateAwsCostCollectionTarget:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.CostExplorer.Requests.UpdateCostCollectionTarget'
      properties:
        role_arn:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.CostExplorer.Requests.UpdateAwsCostCollectionTargetInternal:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.CostExplorer.Requests.UpdateCostCollectionTargetInternal'
      properties:
        role_arn:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        aws_account_id:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.CostExplorer.Requests.UpdateAzureCostCollectionTarget:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.CostExplorer.Requests.UpdateCostCollectionTarget'
      properties:
        subscription_id:
          type: string
          format: uuid
        tenant_id:
          type: string
          format: uuid
        application_id:
          type: string
          format: uuid
        application_secret:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.CostExplorer.Requests.UpdateAzureCostCollectionTargetInternal:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.CostExplorer.Requests.UpdateCostCollectionTargetInternal'
      properties:
        subscription_id:
          type: string
          format: uuid
          nullable: true
        tenant_id:
          type: string
          format: uuid
          nullable: true
        application_id:
          type: string
          format: uuid
          nullable: true
        application_secret:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.CostExplorer.Requests.UpdateCostCollectionTarget:
      type: object
      properties:
        new_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.CostExplorer.Requests.UpdateCostCollectionTargetInternal:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.CostExplorer.Requests.UpdateCostCollectionTarget'
      properties:
        account_id:
          type: string
          format: uuid
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.CloudAccounts.ComputeServices.ComputeAvailability:
      enum:
        - 0
        - 1
      type: integer
      description: "Compute availability type\r\n<remarks>\r\n- 0 (On-demand)<br />\r\n- 1 (spot)\r\n</remarks>"
      format: int32
      x-internal: true
    Quali.Colony.Gateway.Api.CloudAccounts.SpaceCloudAccountInfraSet:
      type: object
      properties:
        region:
          type: string
          nullable: true
        virtual_network:
          type: string
          nullable: true
        subnets:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.CloudAccounts.SpaceCloudAccountSubnets'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.CloudAccounts.SpaceCloudAccountSubnets:
      type: object
      properties:
        gateway_subnet:
          type: string
          nullable: true
        management_subnet:
          type: string
          nullable: true
        application_subnets:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Controllers.QualiYResult:
      type: object
      properties:
        url:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Controllers.TokenController+RefreshTokenModel:
      type: object
      properties:
        refresh_token:
          type: string
          description: Refresh token value
          nullable: true
      additionalProperties: false
      description: Model of refresh_token returned in the response of login method
      x-internal: true
    Quali.Colony.Gateway.Api.History.EnvironmentWithCost:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        space_name:
          type: string
          nullable: true
        scheduled_end_time:
          type: string
          format: date-time
          nullable: true
        automation:
          type: boolean
        status:
          type: string
          nullable: true
        status_details:
          type: string
          nullable: true
        status_error_description:
          type: string
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
        blueprint_name:
          type: string
          nullable: true
        deployment_start_time:
          type: string
          format: date-time
          nullable: true
        create_time:
          type: string
          format: date-time
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.SandboxError'
          nullable: true
        owner:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.UserResponse'
          nullable: true
        cost:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvCost'
          description: Environment cost information
          nullable: true
        clouds:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CloudResponse'
          nullable: true
        source:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.BlueprintSourceResponse'
          description: Blueprint repository information
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.AddArtifactoryRepoRequest:
      required:
        - api_key
        - artifactory_username
        - server_url
      type: object
      properties:
        server_url:
          type: string
          description: 'Artifactory server address, whether hosted or on-prem'
        api_key:
          type: string
          description: ApiKey of a user with read permissions on repository
        artifactory_username:
          type: string
          description: Artifactory Username
      additionalProperties: false
      description: Add Artifactory repository request
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.AddAwsAccountRequest:
      required:
        - arn_role
        - external_id
      type: object
      properties:
        name:
          type: string
          description: Cloud provider account alias name
          nullable: true
        arn_role:
          type: string
          description: Cross account access IAM role ARN used to access customer's account from Colony service
        external_id:
          type: string
          description: Customer external id used to access customer's account from Colony service
      additionalProperties: false
      description: Request to associate aws account with Colony account of the customer
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.AddAzureAccountRequest:
      required:
        - application_id
        - application_secret
        - subscription_id
        - tenant_id
      type: object
      properties:
        subscription_id:
          type: string
          description: The subscription id of the azure account
          format: uuid
        tenant_id:
          type: string
          description: The tenant id of the azure account
          format: uuid
        application_id:
          type: string
          description: The service principal application id to use when connecting to the azure account
          format: uuid
        application_secret:
          type: string
          description: The service principal application secret to use when connecting to the azure account
        name:
          type: string
          description: Cloud provider account alias name
          nullable: true
      additionalProperties: false
      description: Request to associate azure account with Colony account of the customer
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.AddCatalogRequest:
      type: object
      properties:
        blueprint_name:
          type: string
          description: Blueprint name
          nullable: true
        repository_name:
          type: string
          description: Blueprint's repository name
          nullable: true
      additionalProperties: false
      description: Request to add a blueprint to blueprint catalog
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.AddCloudAccountRequest:
      type: object
      properties:
        data:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.AddCloudAccountToSpaceRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        internet_facing:
          type: boolean
          nullable: true
        existing_infra:
          type: boolean
        existing_infra_sets:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.CloudAccounts.SpaceCloudAccountInfraSet'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.AddEnvironmentsToViewRequest:
      type: object
      properties:
        environments:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.AddGcpAccountRequest:
      type: object
      properties:
        name:
          type: string
          description: Cloud provider account alias name
          nullable: true
      additionalProperties: false
      description: Request to associate gcp account with Colony account of the customer
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.AddS3ArtifactsRepoRequest:
      required:
        - bucket_name
      type: object
      properties:
        bucket_name:
          type: string
          description: S3 bucket name where artifacts located
        account_name:
          type: string
          description: name of registered AWS cloud account
          nullable: true
      additionalProperties: false
      description: Add S3 artifacts repo request
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.AwsCloudProviderSettingsModel:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CloudProviderSettingsModel'
      properties:
        sidecar_image_param_name:
          type: string
          description: "Side car image parameter name\r\n<remarks>\r\nParameter must be defined in Parameter Store\r\nIts value will be used as the sidecar image ID\r\n</remarks>"
          nullable: true
      additionalProperties: false
      description: AWS cloud provider settings model
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.CancelApprovalRequestRequest:
      type: object
      properties:
        notes:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.CheckDriftRequest:
      type: object
      properties:
        environments:
          type: array
          items:
            type: string
          description: list of environments to check drift on
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.CloudProviderSettingsModel:
      type: object
      additionalProperties: false
      description: Cloud provider settings model
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.CollaboratorsRequest:
      type: object
      properties:
        collaborators_emails:
          type: array
          items:
            type: string
          nullable: true
        all_space_members:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.ContactMeRequest:
      type: object
      properties:
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.CreateEnvRequest:
      type: object
      properties:
        artifacts:
          type: object
          additionalProperties:
            type: string
          description: "Artifact files required by the applications of the blueprint\r\n<remarks>\r\nFor each application, specify the application name and artifact file path (path is relative to the repo name defined in the space).\r\n</remarks>"
          nullable: true
        inputs:
          type: object
          additionalProperties:
            type: string
          description: Environment blueprint inputs
          nullable: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Environment blueprint tags
          nullable: true
        compute_availability:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.CloudAccounts.ComputeServices.ComputeAvailability'
          nullable: true
        lazy_load_artifacts:
          type: boolean
          description: Set to "true" to allow the sandbox to launch without verifying the existence of the artifacts of the sandbox
          nullable: true
        lazy_load_artifacts_timeout:
          type: integer
          description: Time to wait (in minutes) for artifacts before setup fails
          format: int32
          nullable: true
      additionalProperties: false
      description: Request to create a new environment
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.CreateProductionBlueRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CreateProductionRequest'
      properties:
        blueprint_name:
          type: string
          description: Blueprint name
          nullable: true
      additionalProperties: false
      description: Request to create blue production environment
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.CreateProductionGreenRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CreateProductionRequest'
      additionalProperties: false
      description: Request to create green production environment
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.CreateProductionRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CreateEnvRequest'
      additionalProperties: false
      description: Request to create production environment
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.CreateSandboxRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CreateEnvRequest'
      properties:
        sandbox_name:
          type: string
          description: Sandbox name
          nullable: true
        environment_name:
          type: string
          description: Environment name
          nullable: true
        blueprint_name:
          type: string
          description: Sandbox blueprint name
          nullable: true
        description:
          type: string
          description: Sandbox description
          nullable: true
        owner_email:
          type: string
          nullable: true
        collaborators:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.CollaboratorsRequest'
          nullable: true
        automation:
          type: boolean
          description: 'Launch sandbox integrated pipeline tool in the space (Jenkins, Bitbucket, GitLab, etc.)'
        scheduled_end_time:
          type: string
          description: "Sandbox scheduled end time in ISO 8601 format\r\n<example>For example, 2021-10-06T08:27:05.215Z.</example><remarks>\r\nCannot have both \"duration\" and \"scheduled_end_time\" specified\r\n</remarks>"
          format: date-time
          nullable: true
        duration:
          type: string
          description: "Sandbox duration time in ISO 8601 format: \"P{days}DT{hours}H{minutes}M{seconds}S]]\"\r\n<example>For example, P0DT2H3M4S.</example><remarks>\r\nCannot have both \"duration\" and \"scheduled_end_time\" specified\r\n</remarks>"
          format: date-span
          nullable: true
        source:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.BlueprintSourceRequest'
          description: Request containing blueprint repository information
          nullable: true
        visibility:
          type: string
          description: "Indicates if the sandbox is hidden or visible\r\n<remarks>\r\n- \"normal\": sandbox is visible\r\n- \"hidden\": sandbox is hidden\r\n</remarks>"
          nullable: true
        notes:
          type: string
          nullable: true
      additionalProperties: false
      description: Request to launch a new sandbox
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.DeleteCloudAccountRequest:
      required:
        - cloud_account_name
      type: object
      properties:
        cloud_account_name:
          type: string
          description: The cloud account name
      additionalProperties: false
      description: Request to delete a cloud account from Colony account of the customer
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.GrainUpdateRequest:
      type: object
      properties:
        id:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        commit_hash:
          type: string
          nullable: true
        inputs:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.ModelForLogin:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
          description: User email
        password:
          type: string
          description: User password
      additionalProperties: false
      description: Login request
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.ReconcileDriftRequest:
      type: object
      properties:
        environments:
          type: array
          items:
            type: string
          description: list of environments to reconcile
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.ReconcileSandboxGrainsRequest:
      type: object
      properties:
        grain_paths:
          type: array
          items:
            type: string
          description: List of grain paths to update.
          nullable: true
        grain_ids:
          type: array
          items:
            type: string
          description: List of grain ids to update.
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.TagOverrideRequest:
      required:
        - name
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagValueRequest'
      properties:
        name:
          type: string
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.TagRequest:
      required:
        - scope
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagOverrideRequest'
      properties:
        scope:
          type: string
        possible_values:
          type: array
          items:
            type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.TagUpdateRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.TagRequest'
      properties:
        force_remove_possible_values:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.TagValueRequest:
      type: object
      properties:
        value:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.UpdateApprovalStatusRequest:
      type: object
      properties:
        new_status:
          allOf:
            - $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.ApprovalStatus'
        notes:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.UpdateBlueprintPolicyRequest:
      type: object
      properties:
        max_duration:
          type: string
          description: 'Max duration of environment in ISO 8601 format: P{days}DT{hours}H{minutes}M{seconds}S] (for example, ''P0DT2H3M4S'')'
          format: date-span
          nullable: true
      additionalProperties: false
      description: Update Blueprint policy request
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.UpdateEnvironmentsRequest:
      type: object
      properties:
        environments:
          type: array
          items:
            type: string
          description: list of environments to update
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.UpdateSandboxGrainsRequest:
      type: object
      properties:
        grains:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.GrainUpdateRequest'
          description: List of grains to update.
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.UpdateSpaceCloudAccountRequest:
      type: object
      properties:
        internet_facing:
          type: boolean
        existing_infra:
          type: boolean
        existing_infra_sets:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.CloudAccounts.SpaceCloudAccountInfraSet'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Requests.UserSignupRequest:
      type: object
      properties:
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        company_name:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        secret:
          type: string
          nullable: true
        timezone:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ActivityResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        log:
          type: string
          nullable: true
        time:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TimeDataResponseV1'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.AppInstanceResponse:
      type: object
      properties:
        status:
          type: string
          description: 'Application instance status ("deploying", "pending", "done", etc.)'
          nullable: true
        infra_id:
          type: string
          description: Infra ID of application instance
          nullable: true
        instance_type:
          type: string
          description: EC2 instance type
          nullable: true
        memory_limit:
          type: string
          description: RAM limitation for Kubernetes VM
          nullable: true
        cpu_limit:
          type: string
          description: CPU limitation for Kubernetes VM
          nullable: true
        access_links:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ConnectLinkResponse'
          nullable: true
        private_ip:
          type: string
          description: Application instance private IP
          nullable: true
        compute_availability:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.CloudAccounts.ComputeServices.ComputeAvailability'
          description: "Compute availability type\r\n<remarks>\r\n- 0 (On-demand)<br />\r\n- 1 (spot)\r\n</remarks>"
        links:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.Links.Hyperlink'
          nullable: true
      additionalProperties: false
      description: Application instance information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ApplicationResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ApplicationResponseBase'
      properties:
        private_address:
          type: string
          description: Application private address
          nullable: true
        public_address:
          type: string
          description: Application public address
          nullable: true
        internal_ports:
          type: array
          items:
            type: string
          description: Application internal ports
          nullable: true
        external_ports:
          type: array
          items:
            type: string
          description: Application external ports
          nullable: true
        shortcuts:
          type: array
          items:
            type: string
          description: "Application shortcut rules\r\n<remarks>\r\nThe shortcut rule customizes the application link’s display text in the summary page of the sandbox or production environment\r\n</remarks>"
          nullable: true
        image_name:
          type: string
          description: Application cloud image (AMI for AWS and URN/subscription ID for Azure)
          nullable: true
        internal_dns:
          type: string
          description: DNS name of the application in the sandbox (as decided by the cloud provider)
          nullable: true
        instances:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.AppInstanceResponse'
          description: Application instances
          nullable: true
        icon:
          type: string
          description: Application image name
          nullable: true
        direct_access_protocols:
          type: array
          items:
            type: string
          description: 'Array of protocols for in-browser connection to VM (RDP | SSH | RDP,SSH)'
          nullable: true
      additionalProperties: false
      description: Application information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ApplicationResponseBase:
      type: object
      properties:
        name:
          type: string
          description: Application name
          nullable: true
        status:
          type: string
          description: 'Application status ("Pending", "Aborted", "Done", etc.)'
          nullable: true
        cloud:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CloudResponse'
          description: Cloud account or Kubernetes compute service information
          nullable: true
      additionalProperties: false
      description: Application basic information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ArtifactsRepoResponse:
      type: object
      properties:
        type:
          type: string
          nullable: true
        created_date:
          type: string
          format: date-time
        created_by:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.UserDetails'
          nullable: true
        location:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.BlueprintServiceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ServiceResponse'
      properties:
        services:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.BlueprintServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.HelmServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TerraformServiceResponse'
            description: Service information
            x-internal: true
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.BlueprintSourceResponse:
      type: object
      properties:
        blueprint_name:
          type: string
          description: Sandbox blueprint name
          nullable: true
        repository_name:
          type: string
          description: Blueprint's repository name.
          nullable: true
        branch:
          type: string
          description: Blueprint repository branch
          nullable: true
        commit:
          type: string
          description: Blueprint commit version
          nullable: true
      additionalProperties: false
      description: Blueprint repository information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudAccountBaseResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        cloud_provider_account_id:
          type: string
          nullable: true
        created_date:
          type: string
          format: date-time
        created_by:
          type: string
          nullable: true
        cost:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountCostResponse'
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Abstractions.Exceptions.Error'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudAccountComputeServiceInAccountResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountComputeServiceResponse'
      properties:
        spaces:
          type: array
          items:
            type: string
          nullable: true
        properties:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ComputeServiceProperties'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudAccountComputeServiceInSpaceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountComputeServiceResponse'
      properties:
        spec:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ComputeServiceSpaceSpecResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudAccountComputeServiceResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        created_date:
          type: string
          format: date-time
        created_by:
          type: string
          nullable: true
        user_defined:
          type: boolean
        status:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceStatus'
          nullable: true
        last_keep_alive:
          type: string
          format: date-time
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Abstractions.Exceptions.Error'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudAccountConnectivityResponse:
      type: object
      properties:
        existing_infra:
          type: boolean
        existing_infra_sets:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.CloudAccounts.SpaceCloudAccountInfraSet'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudAccountCostResponse:
      type: object
      properties:
        last_update:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudAccountInAccountResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountBaseResponse'
      properties:
        compute_services:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountComputeServiceInAccountResponse'
          nullable: true
        spaces:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudAccountInSpaceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountBaseResponse'
      properties:
        compute_services:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountComputeServiceInSpaceResponse'
          nullable: true
        internet_facing:
          type: boolean
          nullable: true
        connectivity:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAccountConnectivityResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudAWSSpec:
      type: object
      properties:
        instance_type:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudAzureSpec:
      type: object
      properties:
        instance_type:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudK8SSpec:
      type: object
      properties:
        ram:
          type: string
          nullable: true
        cpu:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CloudSpecsResponse:
      type: object
      properties:
        azure:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAzureSpec'
          nullable: true
        kubernetes:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudK8SSpec'
          nullable: true
        aws:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CloudAWSSpec'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CollaboratorsResponse:
      type: object
      properties:
        collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.UserResponse'
          nullable: true
        all_space_members:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ComputeServiceProperties:
      type: object
      properties:
        agent_namespace:
          type: string
          nullable: true
        sandboxes_namespaces:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ComputeServiceSpaceSpecResponse:
      type: object
      properties:
        kubernetes:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.K8SComputeServiceSpaceInfraSettingsResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ConnectLinkResponse:
      type: object
      properties:
        link:
          type: string
          description: Link to connect to the machines using debugging service
          nullable: true
        protocol:
          type: string
          description: 'Protocol for in-browser connection to VM (RDP, SSH)'
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Abstractions.Exceptions.Error'
          nullable: true
      additionalProperties: false
      description: Connect link information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CostForecastResponse:
      type: object
      properties:
        cloud_account:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        cost_until_now:
          type: string
          nullable: true
        change:
          type: string
          nullable: true
        forecast:
          type: string
          nullable: true
        previous_timeframe_start:
          type: string
          format: date-time
        previous_timeframe_end:
          type: string
          format: date-time
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CreateEnvResponse:
      type: object
      properties:
        id:
          type: string
          description: Environment ID
          nullable: true
      additionalProperties: false
      description: Create environment response
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.CreateViewResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.EnvCost:
      type: object
      properties:
        sum:
          type: number
          description: Total cost sum
          format: double
        last_update:
          type: string
          description: Time of the last update of environment cost
          format: date-time
        final:
          type: boolean
          description: Is the cost final
        currency:
          type: string
          description: 'Currency code in ISO 4217 format (3 letters like USD, EUR, GBP etc.)'
          nullable: true
        incomplete:
          type: boolean
          description: Is the cost incomplete
      additionalProperties: false
      description: Environment cost information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.EnvironmentDetailsResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        definition:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentDefinitionResponse'
          nullable: true
        state:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentStateResponse'
          nullable: true
        computed_status:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.EnvironmentListItemDefinitionResponse:
      type: object
      properties:
        metadata:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentMetadataResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.EnvironmentListItemDetailsResponse:
      type: object
      properties:
        definition:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvironmentListItemDefinitionResponse'
          nullable: true
        state:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvironmentListItemStateResponse'
          nullable: true
        computed_status:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.EnvironmentListItemResponse:
      type: object
      properties:
        id:
          type: string
          description: Environment Id
          nullable: true
        owner:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.UserResponse'
          description: Owner details
          nullable: true
        details:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvironmentListItemDetailsResponse'
          description: Environment details
          nullable: true
        collaborators_info:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CollaboratorsResponse'
          description: Collaborators details
          nullable: true
        cost:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvCost'
          description: Environment cost details
          nullable: true
        read_only:
          type: boolean
          description: Determines if user can perform actions on environment or not
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.EnvironmentListItemStateResponse:
      type: object
      properties:
        current_state:
          type: string
          nullable: true
        execution:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentExecutionResponse'
          nullable: true
        drift:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.GrainDriftResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.EnvironmentResponse:
      type: object
      properties:
        owner:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.UserResponse'
          description: Owner details
          nullable: true
        collaborators_info:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.CollaboratorsResponse'
          description: Collaborators details
          nullable: true
        details:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvironmentDetailsResponse'
          description: Environment details
          nullable: true
        cost:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvCost'
          description: Environment cost details
          nullable: true
        read_only:
          type: boolean
          description: Determines if user can perform actions on environment or not
      additionalProperties: false
      description: Environment information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.EnvResponse:
      type: object
      properties:
        id:
          type: string
          description: Environment ID
          nullable: true
        name:
          type: string
          description: Environment name
          nullable: true
        blueprint_name:
          type: string
          description: Blueprint name
          nullable: true
        repository_name:
          type: string
          description: Blueprint's repository name
          nullable: true
        enable_logs:
          type: boolean
          description: Enable logs flag
          nullable: true
        status_details:
          type: string
          description: 'Environment status details ("initiating", "waiting", "launching", etc.)'
          nullable: true
        status_error_description:
          type: string
          description: Error status description of environment
          nullable: true
        deployment_start_time:
          type: string
          description: Environment deployment start time
          nullable: true
        create_time:
          type: string
          description: Environment creation time
          nullable: true
        build:
          type: string
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.SandboxError'
          nullable: true
        owner:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.UserResponse'
          nullable: true
        debugging_service:
          type: string
          description: 'Debugging service information ("not ready", "on", "off", etc.)'
          nullable: true
        launching_progress:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.LaunchingProgressResponse'
          description: Launching progress of an environment information
          nullable: true
        cost:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvCost'
          description: Environment cost details
          nullable: true
        internet_facing:
          type: boolean
          description: Indicates if environment is internet-facing
          nullable: true
        direct_access:
          type: string
          description: Indicates if there is a direct access to environment
          nullable: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.Links.Hyperlink'
          nullable: true
      additionalProperties: false
      description: Environment information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.HelmServiceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ServiceResponse'
      properties:
        service_account_name:
          type: string
          nullable: true
        progress:
          type: object
          additionalProperties:
            type: string
          nullable: true
        logs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.HelmServiceResponseLog'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.HelmServiceResponseLog:
      type: object
      properties:
        display_name:
          type: string
          nullable: true
        index:
          type: integer
          format: int32
        location:
          type: string
          nullable: true
        start_time:
          type: string
          nullable: true
        duration:
          type: string
          format: date-span
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.K8SComputeServiceSpaceInfraSettingsResponse:
      type: object
      properties:
        internet_facing:
          type: boolean
        namespace:
          type: string
          nullable: true
        ingress_controller_type:
          type: string
          nullable: true
        ingress_class:
          type: string
          nullable: true
        configure_dns:
          type: boolean
        generate_certificate:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.LaunchingProgressResponse:
      type: object
      properties:
        creating_infrastructure:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.LaunchingProgressStepResponse'
          description: Progress of creating infrastructure
          nullable: true
        preparing_artifacts:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.LaunchingProgressStepResponse'
          description: Progress of preparing artifacts
          nullable: true
        deploying_applications:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.LaunchingProgressStepResponse'
          description: Progress of deploying applications
          nullable: true
        verifying_environment:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.LaunchingProgressStepResponse'
          description: Progress of verifying environments
          nullable: true
      additionalProperties: false
      description: Launching progress of an environment information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.LaunchingProgressStepResponse:
      type: object
      properties:
        status:
          type: string
          description: 'Launching progress status ("pending", "in progress", "done", etc.)'
          nullable: true
        total:
          type: integer
          description: Total of items to be launched
          format: int32
        succeeded:
          type: integer
          description: Total of items that were launched successfully
          format: int32
        failed:
          type: integer
          description: Total of items that failed to launch
          format: int32
      additionalProperties: false
      description: Launching progress step details
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ProductionBlueResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ProductionResponse'
      properties:
        has_green:
          type: boolean
          description: Indicates if there is a green production environment
      additionalProperties: false
      description: Blue production information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ProductionGreenResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ProductionResponse'
      properties:
        exposure:
          type: integer
          description: Exposure level in percentage of the green production environment to user traffic (0-100)
          format: int32
      additionalProperties: false
      description: Green production information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ProductionResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvResponse'
      properties:
        sandbox_id:
          type: string
          description: Sandbox ID
          nullable: true
        production_status:
          type: string
          description: 'Production environment status ("launching", "active", "pending", etc.)'
          nullable: true
        update_status:
          type: string
          description: 'Production environment update status ("deploying green", "transitioning green", "cleaning up", etc.)'
          nullable: true
        blueprint_description:
          type: string
          description: Description of the production environment's blueprint
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ApplicationResponse'
          nullable: true
        services:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.BlueprintServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.HelmServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TerraformServiceResponse'
            description: Service information
            x-internal: true
          nullable: true
        artifacts:
          type: object
          additionalProperties:
            type: string
          description: Production environment artifacts
          nullable: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.CreateSandboxInput'
          nullable: true
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.SandboxOutput'
          nullable: true
        tags:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TagResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TagWithStatisticsResponse'
            description: Tag response
            x-internal: true
          description: 'System, pre-defined and user-defined tags sandbox was launched with'
          nullable: true
      additionalProperties: false
      description: Production information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.RegionResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.RepositoryDetailsResponse:
      type: object
      properties:
        repository_url:
          type: string
          nullable: true
        branch:
          type: string
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Abstractions.Exceptions.Error'
          nullable: true
        name:
          type: string
          nullable: true
        repository_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Blueprints.Contracts.Responses.Repository.RepositoryType'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.SandboxError:
      type: object
      properties:
        time:
          type: string
          description: Time when error occured
          nullable: true
        code:
          type: string
          description: Error code
          nullable: true
        message:
          type: string
          description: Error message
          nullable: true
      additionalProperties: false
      description: Sandbox error information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.SandboxOutput:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        display_style:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.SandboxResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.SandboxResponseBase'
      properties:
        blueprint_description:
          type: string
          description: Blueprint description
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ApplicationResponse'
          nullable: true
        services:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.BlueprintServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.HelmServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TerraformServiceResponse'
            description: Service information
            x-internal: true
          nullable: true
        artifacts:
          type: object
          additionalProperties:
            type: string
          description: "Sandbox artifacts\r\n<remarks>\r\nMaps application name to its relative artifacts path in the space\r\n</remarks>"
          nullable: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.CreateSandboxInput'
          nullable: true
        network:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.SandboxNetwork'
          description: Sandbox network details
          nullable: true
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.SandboxOutput'
          nullable: true
        tags:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TagResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TagWithStatisticsResponse'
            description: Tag response
            x-internal: true
          description: 'System, pre-defined and user-defined tags sandbox was launched with'
          nullable: true
      additionalProperties: false
      description: Sandbox information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.SandboxResponseBase:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvResponse'
      properties:
        scheduled_end_time:
          type: string
          description: Sandbox scheduled end time in ISO 8601 format
          nullable: true
        automation:
          type: boolean
          description: 'Launch sandbox integrated pipeline tool in the space (Jenkins, Bitbucket, GitLab, etc.)'
        sandbox_status:
          type: string
          description: 'Sandbox status ("launching", "initiating", "deploying", etc.)'
          nullable: true
        end_time:
          type: string
          description: Time the sandbox actually ended in ISO 8601 format
          nullable: true
        source:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.BlueprintSourceResponse'
          description: Blueprint repository information
          nullable: true
        visibility:
          type: string
          description: Indicates if the sandbox is hidden or visible
          nullable: true
      additionalProperties: false
      description: Sandbox basic information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.SandboxResponseListItem:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.SandboxResponseBase'
      properties:
        applications:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ApplicationResponseBase'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ApplicationResponse'
            description: Application basic information
            x-internal: true
          nullable: true
        services:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.BlueprintServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.HelmServiceResponse'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TerraformServiceResponse'
            description: Service information
            x-internal: true
          nullable: true
      additionalProperties: false
      description: Sandbox information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ServiceResponse:
      type: object
      properties:
        name:
          type: string
          description: Service name
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.Services.ServiceStatus'
          description: 'Status of service ("Pending", "Aborted", "Done", etc.)'
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.Services.ServiceType'
          description: 'Service type ("All", "Terraform", "Unknown", etc.)'
          nullable: true
        icon:
          type: string
          description: Service icon
          nullable: true
        stages:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.StageResponse'
          nullable: true
      additionalProperties: false
      description: Service information
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ServiceTerraformLogs:
      type: object
      properties:
        preparetags:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TerraformLogInfo'
          nullable: true
        tfinit:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TerraformLogInfo'
          nullable: true
        tfplan:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TerraformLogInfo'
          nullable: true
        tfapply:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TerraformLogInfo'
          nullable: true
        tfdestroy:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TerraformLogInfo'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.StageResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        time:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TimeDataResponseV1'
          nullable: true
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ActivityResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.TagBaseResponse:
      type: object
      properties:
        name:
          type: string
          description: Tag name
          nullable: true
        value:
          type: string
          description: Tag value
          nullable: true
        modified_by:
          type: string
          description: Name of the last user who modified the tag
          nullable: true
        modified_by_user:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.HistoricUserInfo'
          nullable: true
        last_modified:
          type: string
          description: Last modification data and time of the tag
          format: date-time
          nullable: true
        created_by:
          type: string
          description: Name of the user who created the tag
          nullable: true
        created_by_user:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.HistoricUserInfo'
          nullable: true
        created_date:
          type: string
          description: Creation date and time of the tag
          format: date-time
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.TagOverrideResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TagBaseResponse'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.TagResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TagBaseResponse'
      properties:
        scope:
          type: string
          description: 'Tag scope (''account'', ''space'', ''blueprint'' and ''runtime'')'
          nullable: true
        possible_values:
          type: array
          items:
            type: string
          description: "Tag possible values\r\n<remarks>Tag value must be one of the possible values</remarks>"
          nullable: true
        description:
          type: string
          description: Tag description
          nullable: true
        tag_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.Tags.TagType'
          description: 'Tag type (''system'', ''user_defined'', ''override'' or ''pre_defined'')'
          nullable: true
      additionalProperties: false
      description: Tag response
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.TagWithStatisticsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.TagResponse'
      properties:
        overridden_values:
          type: integer
          description: The number of spaces or blueprints (depend on the tag scope) in the system where the tag value was set
          format: int32
        missing_overrides:
          type: integer
          description: The number of spaces or blueprints (depend on the tag scope) in the system where the tag value was not set
          format: int32
        missing_overrides_space:
          type: array
          items:
            type: string
          description: 'Set of spaces names where the tag value was not set (if the scope is space, or empty list otherwise)'
          nullable: true
        missing_overrides_sandbox_blueprints:
          type: array
          items:
            type: string
          description: "Set of \"{space_name}\\{blueprint_name}\" where the tag value was not overridden.\r\nIncluding sample space, Not including production.\r\nEmpty list if the scope is not blueprint"
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.TemplateUrl:
      type: object
      properties:
        url:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.TerraformLogInfo:
      type: object
      properties:
        location:
          type: string
          nullable: true
        start_time:
          type: string
          nullable: true
        duration:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.TerraformServiceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ServiceResponse'
      properties:
        logs:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.ServiceTerraformLogs'
          nullable: true
        progress:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.Services.ServiceTerraformProgress'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.TimeDataResponseV1:
      type: object
      properties:
        start:
          type: string
          nullable: true
        duration:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.VerifyCloudProviderResourceResponse:
      type: object
      properties:
        resource_type:
          type: string
          nullable: true
        resource_name:
          type: string
          nullable: true
        resource_id:
          type: string
          nullable: true
        resource_status:
          type: string
          nullable: true
        resource_valid:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.VerifyCloudProviderResponse:
      type: object
      properties:
        success:
          type: boolean
        resources_summary:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.VerifyCloudProviderResourceResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ViewItemResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        modified_by:
          type: string
          nullable: true
        last_modified:
          type: string
          format: date-time
        environments:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Responses.EnvironmentResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Model.Responses.ViewListItemResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        modified_by:
          type: string
          nullable: true
        last_modified:
          type: string
          format: date-time
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Services.Artifacts.Repository.Azure.AddAzureStorageRequest:
      type: object
      properties:
        account_name:
          type: string
          nullable: true
        storage_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Services.CostExplorer.AccountCostBreakdownResult:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.CostExplorer.CostBreakdownResult'
      properties:
        breakdown:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.CostExplorer.CostBreakdownResult'
              - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.CostExplorer.AccountCostBreakdownResult'
            x-internal: true
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Services.CostExplorer.CostBreakdownResult:
      type: object
      properties:
        label:
          type: string
          nullable: true
        cost:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.CostExplorer.CostInfo'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Services.CostExplorer.CostInfo:
      type: object
      properties:
        sum:
          type: number
          format: double
        currency:
          type: string
          description: 'Currency code in ISO 4217 format (3 letters like USD, EUR, GBP etc.)'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Services.CostExplorer.CostSummaryResult:
      type: object
      properties:
        total_environments:
          type: string
          nullable: true
        total_cost:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Services.CostExplorer.CostInfo'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Services.Sandbox.SandboxUsagePerDayResponse:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        automation:
          type: integer
          format: int32
        manual:
          type: integer
          format: int32
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Services.SandboxesUsage:
      type: object
      properties:
        date:
          type: string
          format: date-time
        max_concurrent_sandboxes:
          type: integer
          format: int32
        license_limit:
          type: integer
          format: int32
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Space.CreateSpaceRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Space.SpaceCloudAccount:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.Space.SpaceListItemResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        admins:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Space.SpaceAdmin'
          nullable: true
        users_count:
          type: integer
          format: int32
        cloud_accounts:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Space.SpaceCloudAccount'
          nullable: true
        color:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.Links.Hyperlink'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Gateway.Api.vCenter.VcenterSettingsModel:
      type: object
      properties:
        min_vlan_id:
          type: integer
          format: int32
        max_vlan_id:
          type: integer
          format: int32
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Audit.Contracts.AuditProviderConfig:
      type: object
      properties:
        type:
          type: string
          nullable: true
        properties:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Blueprints.Contracts.Requests.Repository.CreateOrUpdateRepositoryRequest:
      type: object
      properties:
        repository_url:
          type: string
          nullable: true
        access_token:
          type: string
          nullable: true
        repository_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Blueprints.Contracts.Responses.Repository.RepositoryType'
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.DeploymentType'
          nullable: true
        branch:
          type: string
          nullable: true
        repository_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Blueprints.Contracts.Requests.Repository.CreateRepositoryProviderRequest:
      required:
        - name
        - type
      type: object
      properties:
        name:
          type: string
        type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Blueprints.Contracts.Responses.Repository.RepositoryType'
        details:
          type: object
          additionalProperties:
            type: string
          nullable: true
        repo:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Repository.RepositoryInfoRequest'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Blueprints.Contracts.Responses.Repository.RepositoryType:
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Blueprints.V2BlueprintValidation.BlueprintValidationRequest:
      type: object
      properties:
        blueprint_name:
          type: string
          description: Blueprint name
          nullable: true
        blueprint_raw_64:
          type: string
          description: Blueprint file context in a base64 encoding
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.IdentityProviders.IdentityProviderTypes:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
      x-internal: true
    Quali.Colony.Services.Common.IdentityServer.UserType:
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.ITerraformModulePermission:
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.AccountExtraDetailsModel:
      required:
        - anonymous_users
        - sso_enabled
        - sso_update_enabled
      type: object
      properties:
        sso_enabled:
          type: boolean
        anonymous_users:
          type: boolean
        sso_update_enabled:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.AddRepositoryRequest:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.DeploymentType'
          nullable: true
        branch:
          type: string
          nullable: true
        repository_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.AuthorizeAddAzureRepositoryRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AddRepositoryRequest'
      properties:
        code:
          type: string
          nullable: true
        repository_url:
          type: string
          nullable: true
        redirection_url:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.AuthorizeAddBitBucketRepositoryRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AddRepositoryRequest'
      properties:
        code:
          type: string
          nullable: true
        repository_url:
          type: string
          nullable: true
        redirection_url:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.AuthorizeAddBitBucketServerRepositoryRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AddRepositoryRequest'
      properties:
        repository_url:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.AuthorizeAddGithubRepositoryRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AddRepositoryRequest'
      properties:
        code:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        repository_url:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.AuthorizeAddGitLabEnterpriseRepositoryRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AddRepositoryRequest'
      properties:
        repository_url:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.AuthorizeAddGitLabRepositoryRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.AddRepositoryRequest'
      properties:
        code:
          type: string
          nullable: true
        repository_url:
          type: string
          nullable: true
        redirection_url:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Blueprint.BlueprintSourceRequest:
      type: object
      properties:
        blueprint_name:
          type: string
          description: Sandbox blueprint name
          nullable: true
        repository_name:
          type: string
          description: blueprint's repository name
          nullable: true
        branch:
          type: string
          description: Blueprint repository branch
          nullable: true
        commit:
          type: string
          description: Blueprint commit version
          nullable: true
      additionalProperties: false
      description: Request containing blueprint repository information
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Blueprint.EditBlueprintMetadataRequest:
      type: object
      properties:
        blueprint_name:
          type: string
          description: Blueprint name
          nullable: true
        repository_name:
          type: string
          description: repository name associated with the blueprint
          nullable: true
        color:
          type: string
          description: Blueprint color name corresponding to UI mapping
          nullable: true
        icon:
          type: string
          description: Blueprint icon name corresponding to UI mapping
          nullable: true
        labels:
          type: array
          items:
            type: string
          description: names of the labels we want to have associated with this blueprint
          nullable: true
      additionalProperties: false
      description: Request to edit a blueprint's metadata
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleComputeServiceRequest:
      type: object
      properties:
        cloud_account_name:
          type: string
          nullable: true
        compute_service_name:
          type: string
          nullable: true
        permissions:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.ITerraformModulePermission'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleDescriptorRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        module_repo_name:
          type: string
          nullable: true
        module_root_path:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        terraform_version:
          type: string
          nullable: true
        enable_auto_tagging:
          type: boolean
          nullable: true
        exclude_from_tagging:
          type: array
          items:
            type: string
          nullable: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleInputRequest'
          nullable: true
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleOutputRequest'
          nullable: true
        compute_services:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleComputeServiceRequest'
          nullable: true
        allowed_spaces:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleDescriptorUpdate:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleDescriptorRequest'
      properties:
        existing_module_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleInputRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        optional:
          type: boolean
          nullable: true
        overridable:
          type: boolean
          nullable: true
        display_style:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleOutputRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        display_style:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Blueprint.UpdateBlueprintIsApprovalRequiredRequest:
      type: object
      properties:
        blueprint_name:
          type: string
          nullable: true
        repository_name:
          type: string
          nullable: true
        is_approval_required:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Blueprint.UpdatedBlueprint:
      type: object
      properties:
        content:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.BlueprintsAutoDiscovery.BlueprintCandidateRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        repository_url:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        override_blueprint:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.BlueprintsAutoDiscovery.CreateBlueprintsFromCandidatesRequest:
      type: object
      properties:
        blueprint_candidates:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.BlueprintsAutoDiscovery.BlueprintCandidateRequest'
          nullable: true
        repository_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.CreateAccountInnerRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.CreateAccountRequest'
      properties:
        idp_id:
          type: string
          nullable: true
        user_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.IdentityServer.UserType'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.CreateAccountRequest:
      type: object
      properties:
        account_name:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        timezone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        company_name:
          type: string
          nullable: true
        login_url:
          type: string
          nullable: true
        base_url:
          type: string
          nullable: true
        utm_campaign:
          type: string
          nullable: true
        utm_source:
          type: string
          nullable: true
        utm_medium:
          type: string
          nullable: true
        captcha_token:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.CreateInvitationsRequest:
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
          nullable: true
        account_role:
          type: string
          nullable: true
        reason:
          type: string
          nullable: true
        space_name:
          type: string
          nullable: true
        space_role:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.CreateSandboxInput:
      type: object
      properties:
        name:
          type: string
          description: Input name
          nullable: true
        value:
          type: string
          description: Input value
          nullable: true
        display_style:
          type: string
          description: "Indicates how to display input value in UI\r\n<remarks>\r\nTo display input value in plain text in the UI, do not assign a value.<br />\r\nTo hide input value behind bullets, enter the value \"masked\".\r\n</remarks>"
          nullable: true
        description:
          type: string
          description: Input description
          nullable: true
        optional:
          type: boolean
          description: "Indicates if input is optional\r\n<remarks>\r\nWhen optional is set to true, user can leave the parameter empty.<br />\r\nWhen optional is set to false, empty value(s) will result in validation error(s).\r\n</remarks>"
      additionalProperties: false
      description: Sandbox input information
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.DeploymentType:
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.ForgotAccountRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.ForgotAccountRequestInner:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.ForgotAccountRequest'
      properties:
        baseUrl:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.ForgotPasswordRequest:
      type: object
      properties:
        account_name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.HelmCharts.HelmChartComputeServiceRequest:
      type: object
      properties:
        cloud_account_name:
          type: string
          nullable: true
        compute_service_name:
          type: string
          nullable: true
        service_account_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.HelmCharts.HelmChartDescriptorRequest:
      type: object
      properties:
        chart_root_path:
          type: string
          nullable: true
        git_branch:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        enable_logs:
          type: boolean
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.HelmCharts.HelmChartInputRequest'
          nullable: true
        override_values_yaml:
          type: string
          nullable: true
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.HelmCharts.HelmChartOutputRequest'
          nullable: true
        compute_service:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.HelmCharts.HelmChartComputeServiceRequest'
          nullable: true
        perform_helm_test:
          type: boolean
        commands:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.HelmCharts.HelmChartInputRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        optional:
          type: boolean
        overridable:
          type: boolean
        display_style:
          type: string
          nullable: true
        possible_values:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.HelmCharts.HelmChartOutputRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        display_style:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Labels.AddLabelRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Labels.EditLabelRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.RemoveInvitesRequest:
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.Repository.RepositoryInfoRequest:
      required:
        - allow_sharing
        - name
        - open_access
        - provider_id
        - space_name
      type: object
      properties:
        provider_id:
          type: string
          format: uuid
        name:
          type: string
        allow_sharing:
          type: boolean
        open_access:
          type: boolean
        repository_url:
          type: string
          nullable: true
        connection_details:
          type: object
          additionalProperties:
            type: string
          nullable: true
        space_name:
          type: string
        space_id:
          type: string
          format: uuid
        account_id:
          type: string
          format: uuid
        deployment_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.DeploymentType'
          nullable: true
        branch:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.ResetPasswordRequest:
      type: object
      properties:
        secret:
          type: string
          nullable: true
        new_password:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.SandboxNetwork:
      type: object
      properties:
        region:
          type: string
          description: Cloud account region
          nullable: true
        network_id:
          type: string
          description: 'Virtual network ID (AWS: VPC ID; Azure: VNet name)'
          nullable: true
        gateway_subnet:
          type: string
          description: ID of subnet where application gateway is installed
          nullable: true
        management_subnet:
          type: string
          description: ID of subnet where management infrastructure of sandbox is installed
          nullable: true
        application_subnets:
          type: array
          items:
            type: string
          description: ID of subnet(s) where applications of sandbox are deployed
          nullable: true
      additionalProperties: false
      description: Sandbox network details
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.TerraformModules.AddSpaceTerraformModuleRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.TerraformModules.SpaceTerraformModuleRequest'
      properties:
        module_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.TerraformModules.SpaceTerraformModuleInput:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        overridable:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.TerraformModules.SpaceTerraformModuleRequest:
      type: object
      properties:
        module_alias:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        cloud_account_name:
          type: string
          nullable: true
        compute_service_name:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        enable_logs:
          type: boolean
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.TerraformModules.SpaceTerraformModuleInput'
          nullable: true
      additionalProperties: false
      description: request that is coming into the gateway and forwarded to the Blueprint ms
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.TerraformModules.UpdateSpaceTerraformModuleRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.TerraformModules.SpaceTerraformModuleRequest'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.UpdateAccountAliasRequest:
      type: object
      properties:
        alias:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.UserSignupInnerRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Gateway.Api.Model.Requests.UserSignupRequest'
      properties:
        login_base_url:
          type: string
          nullable: true
        idp_id:
          type: string
          nullable: true
        idp_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.IdentityProviders.IdentityProviderTypes'
        user_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.IdentityServer.UserType'
          nullable: true
        idp_email:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.UserSpaceRoleRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        space_role:
          type: string
          nullable: true
        space_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Requests.UserSurveyRequest:
      type: object
      properties:
        roles:
          type: array
          items:
            type: string
          nullable: true
        primary_technologies:
          type: array
          items:
            type: string
          nullable: true
        primary_platforms:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.AboutResponse:
      type: object
      properties:
        github_client_id:
          type: string
          nullable: true
        bitbucket_client_id:
          type: string
          nullable: true
        gitlab_client_id:
          type: string
          nullable: true
        azure_client_id:
          type: string
          nullable: true
        release:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.AboutResponseRelease'
          nullable: true
        branding:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.AboutResponseRelease:
      type: object
      properties:
        branch:
          type: string
          nullable: true
        changeset:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        build_date:
          type: string
          nullable: true
        build_id:
          type: string
          nullable: true
        sidecar_version:
          type: string
          nullable: true
        kube_agent_version:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.AchievementInfo:
      type: object
      properties:
        user:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BaseResponse:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.Links.Hyperlink'
          nullable: true
      additionalProperties: false
      description: Response containing basic information
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.Blueprint.TerraformModuleDescriptorResponse:
      required:
        - created_by
        - created_date
        - last_modified
        - modified_by
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.Blueprint.TerraformModuleDescriptorRequest'
      properties:
        modified_by:
          type: string
        last_modified:
          type: string
          format: date-time
        created_by:
          type: string
        created_date:
          type: string
          format: date-time
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintApplicationForGetAllResponse:
      type: object
      properties:
        name:
          type: string
          description: Application name
          nullable: true
        version:
          type: string
          description: Application version
          nullable: true
        icon_url:
          type: string
          description: URL of the application icon
          nullable: true
      additionalProperties: false
      description: Blueprint application information
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintContentResponse:
      type: object
      properties:
        content:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintFileKind:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintFileResponse:
      type: object
      properties:
        url:
          type: string
          nullable: true
        kind:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintFileKind'
        source_control_details:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.SourceControlDetailsResponse'
          nullable: true
        content:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintForGetAllBaseResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BaseResponse'
      properties:
        blueprint_name:
          type: string
          description: Blueprint name
          nullable: true
        name:
          type: string
          description: Blueprint name
          nullable: true
          readOnly: true
        repository_name:
          type: string
          description: Blueprint's repository name
          nullable: true
        repository_branch:
          type: string
          description: Blueprint's repository branch
          nullable: true
        repository_url:
          type: string
          description: Blueprint's repository url
          nullable: true
        is_editable:
          type: boolean
          description: Is the blueprint editable
        description:
          type: string
          description: Blueprint description
          nullable: true
        spec_version:
          type: string
          description: Blueprint spec version
          nullable: true
        url:
          type: string
          description: URL to blueprint yaml file in source repository
          nullable: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintInputResponse'
          nullable: true
        last_modified:
          type: string
          description: Last modification date and time of the blueprint
          format: date-time
        modified_by:
          type: string
          description: Name of the last user who modified the blueprint
          nullable: true
        grains:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Contracts.Blueprints.BlueprintGrainForList'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintApplicationForGetAllResponse'
          nullable: true
        clouds:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CloudResponse'
          nullable: true
        is_sample:
          type: boolean
          description: Indicates if the blueprint is a sample blueprint
        artifacts:
          type: object
          additionalProperties:
            type: string
          description: "Artifact files of the blueprint applications\r\n<remarks>Maps application name to its relative artifacts path in the space</remarks>"
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Abstractions.Exceptions.Error'
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintTagResponse'
          nullable: true
        policies:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintPolicyResponse'
          description: Blueprint policy response
          nullable: true
        cost:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.Blueprints.BlueprintCostResponse'
          nullable: true
        color:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintLabel'
          nullable: true
      additionalProperties: false
      description: Blueprint information
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintForGetAllResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintForGetAllBaseResponse'
      properties:
        enabled:
          type: boolean
          description: Indicates if the blueprint is published or not
        is_approval_required:
          type: boolean
          description: Indicates if the blueprint is published or not
        services:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintServiceForGetAllResponse'
          nullable: true
        environment_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.Blueprints.EnvironmentType'
          description: Blueprint environment type ('sandbox' or 'production')
          nullable: true
      additionalProperties: false
      description: Blueprint information
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintInputResponse:
      type: object
      properties:
        name:
          type: string
          description: Input name
          nullable: true
        default_value:
          type: string
          description: "When the sandbox is created, Torque automatically populates the input with this value.\r\n<remarks>\r\nUser can choose to edit the value or leave it as-is\r\n</remarks>"
          nullable: true
        display_style:
          type: string
          description: "Indicates how to display the input value in UI\r\n<remarks>\r\n- To display the input value in plain text in the UI, do not assign a value.<br />\r\n- To hide the input value behind bullets, enter the value \"masked\".\r\n</remarks>"
          nullable: true
        description:
          type: string
          description: Input description
          nullable: true
        optional:
          type: boolean
          description: "Indicates if the input is optional or not\r\n<remarks>\r\n- When optional is set to true, the user can leave the parameter empty.<br />\r\n- When optional is set to false, empty value(s) will result in validation error(s).\r\n</remarks>"
        possible_values:
          type: array
          items:
            type: string
          description: "Possible values for the input\r\n<remarks>\r\n- Possible_values are optional\r\n- The default value is one of the possible values\r\n- Possible values must be unique\r\n</remarks>"
          nullable: true
      additionalProperties: false
      description: Blueprint input information
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintPolicyResponse:
      type: object
      properties:
        max_duration:
          type: string
          description: 'Max duration of environment in ISO 8601 format: P{days}DT{hours}H{minutes}M{seconds}S] (for example, ''P0DT2H3M4S'')'
          format: date-span
          nullable: true
      additionalProperties: false
      description: Blueprint policy response
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintsAutoDiscovery.BlueprintCandidateResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        repository_url:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintServiceForGetAllResponse:
      type: object
      properties:
        name:
          type: string
          description: "Service name\r\n<remarks>A service folder and YAML with this name should reside in the \"/services\" folder in the blueprint YAML’s repository</remarks>"
          nullable: true
        type:
          type: string
          description: Service type (e.g. "Terraform")
          nullable: true
      additionalProperties: false
      description: Blueprint service information
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.BlueprintTagResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        default_value:
          type: string
          nullable: true
        possible_values:
          type: array
          items:
            type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.CatalogForGetAllResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.BlueprintForGetAllBaseResponse'
      additionalProperties: false
      description: "Published blueprint information\r\n<remarks>\r\nPublished blueprint is a blueprint that is available in blueprint catalog\r\n</remarks>"
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.CatalogForGetResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CatalogForGetAllResponse'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.CloudComputeServiceResponse:
      type: object
      properties:
        name:
          type: string
          description: Cloud compute service name
          nullable: true
        type:
          type: string
          description: 'Cloud compute service type (EC2, Azure virtual machine, AKS, EKS, etc.)'
          nullable: true
        created_date:
          type: string
          description: Cloud compute service creation date and time
          format: date-time
        created_by:
          type: string
          description: User name of the cloud compute service owner
          nullable: true
        user_defined:
          type: boolean
          description: 'Indicates if the cloud compute service created automatically or defined by the user<br /><example>EC2 and Azure VM are not user defined while K8s, EKS and AKS are user-defined.</example>'
      additionalProperties: false
      description: Cloud compute service information
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.CloudRegionResponse:
      type: object
      properties:
        id:
          type: string
          description: Cloud region ID
          nullable: true
        name:
          type: string
          description: Cloud region name
          nullable: true
      additionalProperties: false
      description: Cloud region information
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.CloudResponse:
      type: object
      properties:
        provider:
          type: string
          description: Cloud provider name
          nullable: true
        cloud_account_name:
          type: string
          description: Cloud account name
          nullable: true
        compute_service:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CloudComputeServiceResponse'
          description: Cloud compute service information
          nullable: true
        region:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.CloudRegionResponse'
          description: Cloud region information
          nullable: true
      additionalProperties: false
      description: Cloud account or Kubernetes compute service information
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.CreateBlueprintsFromCandidatesResponse:
      type: object
      properties:
        name:
          type: string
          description: Blueprint name
          nullable: true
      additionalProperties: false
      description: Auto generated blueprint information
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.CreateRepositoryResponse:
      type: object
      properties:
        providerId:
          type: string
          format: uuid
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.HistoricUserInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        timezone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        join_date:
          type: string
          format: date-time
        display_first_name:
          type: string
          nullable: true
          readOnly: true
        display_last_name:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.InvitedUserDetailsResponse:
      type: object
      properties:
        email:
          type: string
          nullable: true
        account_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.Links.Hyperlink:
      type: object
      properties:
        rel:
          type: string
          description: Link relation type that describes how the current context (source) is related to the target resource
          nullable: true
        href:
          type: string
          description: URI link to the API
          nullable: true
        method:
          type: string
          description: 'HTTP method (GET, POST, PUT, etc.)'
          nullable: true
      additionalProperties: false
      description: Links to API
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.LongTokenResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Responses.LongTokenSafeResponse'
      properties:
        token:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.LongTokenSafeResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.RoleListItemResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.SourceControlDetailsResponse:
      type: object
      properties:
        branch_name:
          type: string
          nullable: true
        latest_commit_id:
          type: string
          nullable: true
        changed_by:
          type: string
          nullable: true
        change_date:
          type: string
          format: date-time
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.SpaceMetadataResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        accountId:
          type: string
          format: uuid
        color:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.TerraformModules.SpaceTerraformModuleResponse:
      type: object
      properties:
        module_name:
          type: string
          nullable: true
        module_alias:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        cloud_account_name:
          type: string
          nullable: true
        compute_service_name:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        enable_logs:
          type: boolean
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Common.Model.Requests.TerraformModules.SpaceTerraformModuleInput'
          nullable: true
      additionalProperties: false
      description: response that is returned from the gateway after originating in the Blueprint ms
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Access token string as issued by the authorization server
          nullable: true
        refresh_token:
          type: string
          description: Refresh token to be used to extend existing session
          nullable: true
        token_type:
          type: string
          description: 'Token type, typically just the string "bearer"'
          nullable: true
        expires_in:
          type: integer
          description: Access token validity period
          format: int64
      additionalProperties: false
      description: "Describes the authentication server response if the request for an access token is valid\r\n<remarks>\r\n Contains access token and some additional properties about the authorization\r\n</remarks>"
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.UserDetails:
      type: object
      properties:
        email:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        timezone:
          type: string
          nullable: true
        display_first_name:
          type: string
          nullable: true
          readOnly: true
        display_last_name:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.UserForAllUsersResponse:
      type: object
      properties:
        email:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        timezone:
          type: string
          nullable: true
        display_first_name:
          type: string
          nullable: true
          readOnly: true
        display_last_name:
          type: string
          nullable: true
          readOnly: true
        user_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.IdentityServer.UserType'
          nullable: true
        join_date:
          type: string
          format: date-time
        account_role:
          type: string
          nullable: true
        has_access_to_all_spaces:
          type: boolean
        member_in_spaces:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.UserInvitationResponse:
      type: object
      properties:
        email:
          type: string
          nullable: true
        send_date:
          type: string
          format: date-time
        account_role:
          type: string
          nullable: true
        space_name:
          type: string
          nullable: true
        space_role:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.UserPermittedToSpaceResponse:
      type: object
      properties:
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        display_first_name:
          type: string
          nullable: true
          readOnly: true
        display_last_name:
          type: string
          nullable: true
          readOnly: true
        email:
          type: string
          nullable: true
        user_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Common.IdentityServer.UserType'
          nullable: true
        join_date:
          type: string
          format: date-time
        space_role:
          type: string
          nullable: true
        account_role:
          type: string
          nullable: true
        has_access_to_all_spaces:
          type: boolean
        timezone:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Model.Responses.UserResponse:
      type: object
      properties:
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        timezone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        join_date:
          type: string
          format: date-time
        display_first_name:
          type: string
          nullable: true
          readOnly: true
        display_last_name:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Space.CustomizeSpaceRequest:
      type: object
      properties:
        color:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Space.GetSpaceResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Space.SpaceAdmin:
      type: object
      properties:
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        account_role:
          type: string
          nullable: true
        display_first_name:
          type: string
          nullable: true
          readOnly: true
        display_last_name:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Common.Space.UpdateSpaceRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.AksInfraSettingsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.K8SInfraSettingsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
        subscription_id:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.AmazonEc2InfraSettingsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.InfraSettingsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
        internet_facing:
          type: boolean
        existing_infra:
          type: boolean
        existing_infra_settings:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.VirtualNetworkSettings'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceDetailsResponse:
      type: object
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
        type:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceInternalResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceResponse'
      properties:
        agent_id:
          type: string
          format: uuid
        limits:
          oneOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceLimitsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.AksLimitsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.DockerLimitsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.K8SLimitsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.VCenterLimitsResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceLimitsResponse:
      type: object
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
        type:
          type: string
          nullable: true
        concurrent_environments_limit:
          type: integer
          format: int32
        grains_per_blueprint_limit:
          type: integer
          format: int32
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        quali_owned:
          type: boolean
        type:
          type: string
          nullable: true
        create_date:
          type: string
          format: date-time
        create_user:
          type: string
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceStatus'
          nullable: true
        spaces:
          type: array
          items:
            type: string
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Abstractions.Exceptions.Error'
          nullable: true
        additional_details:
          oneOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceDetailsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.AksDetailsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.DockerDetailsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.K8SDetailsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.VCenterDetailsResponse'
          nullable: true
        last_keep_alive:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceStatus:
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Details.CreateAksDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Details.CreateGenericK8SDetails'
      properties:
        tenant_id:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Details.CreateAmazonEc2Details:
      required:
        - cloud_account_id
        - external_id
        - role_arn
      type: object
      properties:
        role_arn:
          type: string
        external_id:
          type: string
        cloud_account_id:
          type: string
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Details.CreateDockerDetails:
      type: object
      properties:
        configure_dns:
          type: boolean
        generate_certificate:
          type: boolean
        type:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Details.CreateGenericK8SDetails:
      type: object
      properties:
        agent_namespace:
          type: string
          nullable: true
        ingress_controller_type:
          type: string
          nullable: true
        ingress_class:
          type: string
          nullable: true
        configure_dns:
          type: boolean
        generate_certificate:
          type: boolean
        type:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Details.CreateVCenterDetails:
      type: object
      properties:
        configure_dns:
          type: boolean
        generate_certificate:
          type: boolean
        type:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Details.GetAgentDeploymentUrlResponse:
      type: object
      properties:
        token:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.DockerInfraSettingsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.InfraSettingsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
        internet_facing:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.InfraSettingsResponse:
      type: object
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.K8SInfraSettingsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.InfraSettingsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
        internet_facing:
          type: boolean
        namespace:
          type: string
          nullable: true
        service_account:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateAksLimits:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateGenericK8SLimits'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateAmazonEc2Limits:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateBasicLimits'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateBasicLimits:
      type: object
      properties:
        concurrent_environments_limit:
          type: integer
          format: int32
        grains_per_blueprint_limit:
          type: integer
          format: int32
        type:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateDockerLimits:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateBasicLimits'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateGenericK8SLimits:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateBasicLimits'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateVCenterLimits:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateBasicLimits'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.AksSpaceAssociationSpec:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.K8sSpaceAssociationSpec'
      properties:
        subscription_id:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateAmazonEc2Request:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateComputeServiceRequest'
      properties:
        details:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Details.CreateAmazonEc2Details'
          nullable: true
        limits:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateAmazonEc2Limits'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateComputeServiceRequest:
      required:
        - service_name
        - service_type
      type: object
      properties:
        service_type:
          type: string
        service_name:
          type: string
        quali_owned:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateDockerRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateComputeServiceRequest'
      properties:
        details:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Details.CreateDockerDetails'
          nullable: true
        limits:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateDockerLimits'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateGenericK8SRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateComputeServiceRequest'
      properties:
        details:
          oneOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Details.CreateGenericK8SDetails'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Details.CreateAksDetails'
          nullable: true
        limits:
          oneOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateGenericK8SLimits'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateAksLimits'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateVCenterRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.CreateComputeServiceRequest'
      properties:
        details:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Details.CreateVCenterDetails'
          nullable: true
        limits:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Limits.CreateVCenterLimits'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.GetAgentDeploymentFileRequest:
      type: object
      properties:
        service_type:
          type: string
          nullable: true
        service_name:
          type: string
          nullable: true
        details:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.IDeployFileDetailsRequest'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.GetAgentDeploymentUrlRequest:
      type: object
      properties:
        host_type:
          type: string
          nullable: true
        host_name:
          type: string
          nullable: true
        details:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.IDeployFileDetailsRequest'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.GetKubecostAccessFileRequest:
      required:
        - kubecost_namespace
        - service_name
      type: object
      properties:
        kubecost_namespace:
          type: string
        service_name:
          type: string
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.IDeployFileDetailsRequest:
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.K8SGetAgentDeploymentFileRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.GetAgentDeploymentFileRequest'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.K8SGetAgentDeploymentUrlRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.GetAgentDeploymentUrlRequest'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.K8sSpaceAssociationSpec:
      type: object
      properties:
        type:
          type: string
          nullable: true
        default_namespace:
          type: string
          nullable: true
        default_service_account:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.UpdateComputeServiceRequest:
      required:
        - service_name
      type: object
      properties:
        service_name:
          type: string
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.VCenterGetAgentDeploymentFileRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.GetAgentDeploymentFileRequest'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Requests.VCenterGetAgentDeploymentUrlRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Requests.GetAgentDeploymentUrlRequest'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.AksDetailsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.K8SDetailsResponse'
      properties:
        tenant_id:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.AksLimitsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.K8SLimitsResponse'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.DockerDetailsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceDetailsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
        configure_dns:
          type: boolean
        generate_certificate:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.DockerLimitsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceLimitsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.GetSpaceAssociationsResponse:
      type: object
      properties:
        space-associations:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.SpaceAssociationDto'
              - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.VCenter.VCenterSpaceAssociationDto'
              - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.k8s.K8sSpaceAssociationDto'
              - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.k8s.AksSpaceAssociationDto'
            x-internal: true
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.k8s.AksSpaceAssociationDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.k8s.K8sSpaceAssociationDto'
      properties:
        subscription_id:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.k8s.GetAgentNamespacesResponse:
      type: object
      properties:
        namespaces:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.k8s.GetAgentServiceAccountsResponse:
      type: object
      properties:
        serviceAccounts:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.k8s.K8sSpaceAssociationDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.SpaceAssociationDto'
      properties:
        namespace:
          type: string
          nullable: true
        service_account:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.K8SDetailsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceDetailsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
        agent_namespace:
          type: string
          nullable: true
        ingress_controller_type:
          type: string
          nullable: true
        ingress_class:
          type: string
          nullable: true
        configure_dns:
          type: boolean
        generate_certificate:
          type: boolean
        has_config:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.K8SLimitsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceLimitsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.RenewClusterTokenResponse:
      type: object
      properties:
        newClusterToken:
          type: string
          format: uuid
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.SpaceAssociationDto:
      type: object
      properties:
        host_name:
          type: string
          nullable: true
        host_type:
          type: string
          nullable: true
        space_name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.VCenter.VCenterSpaceAssociationDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.SpaceAssociationDto'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.VCenterDetailsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceDetailsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
        configure_dns:
          type: boolean
        generate_certificate:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.Responses.VCenterLimitsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceLimitsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.SpaceComputeServiceResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        create_date:
          type: string
          format: date-time
        create_user:
          type: string
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceStatus'
          nullable: true
        spec:
          oneOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.InfraSettingsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.AmazonEc2InfraSettingsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.K8SInfraSettingsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.AksInfraSettingsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.VCenterInfraSettingsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.DockerInfraSettingsResponse'
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Abstractions.Exceptions.Error'
          nullable: true
        last_keep_alive:
          type: string
          format: date-time
          nullable: true
        additional_details:
          oneOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.ComputeServiceDetailsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.AksDetailsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.DockerDetailsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.K8SDetailsResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.Responses.VCenterDetailsResponse'
          nullable: true
        quali_owned:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.VCenterInfraSettingsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ComputeServices.Contracts.InfraSettingsResponse'
      properties:
        service_type:
          type: string
          nullable: true
          readOnly: true
        internet_facing:
          type: boolean
        namespace:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ComputeServices.Contracts.VirtualNetworkSettings:
      type: object
      properties:
        region:
          type: string
          nullable: true
        network_id:
          type: string
          nullable: true
        gateway_subnet:
          type: string
          nullable: true
        management_subnet:
          type: string
          nullable: true
        application_subnets:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Requests.AwsBasicDataRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.CredentialDataRequest'
      properties:
        key:
          type: string
          nullable: true
        secret:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Requests.AwsRoleArnDataRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.CredentialDataRequest'
      properties:
        role_arn:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Requests.AzureBasicDataRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.CredentialDataRequest'
      properties:
        tenant_id:
          type: string
          nullable: true
        subscription_id:
          type: string
          nullable: true
        app_id:
          type: string
          nullable: true
        app_secret:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Requests.CreateCredentialRequest:
      required:
        - credential_data
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        cloud_type:
          type: string
          nullable: true
        cloud_identifier:
          type: string
          nullable: true
        credential_data:
          oneOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.AwsBasicDataRequest'
            - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.AwsRoleArnDataRequest'
            - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.AzureBasicDataRequest'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Requests.CredentialDataRequest:
      required:
        - type
      type: object
      properties:
        type:
          type: string
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Requests.UpdateCredentialRequest:
      type: object
      properties:
        description:
          type: string
          nullable: true
        cloud_identifier:
          type: string
          nullable: true
        credential_data:
          oneOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.AwsBasicDataRequest'
            - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.AwsRoleArnDataRequest'
            - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Requests.AzureBasicDataRequest'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Responses.AwsBasicDataResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Responses.CredentialDataResponse'
      properties:
        key:
          type: string
          nullable: true
        secret:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Responses.AwsRoleArnDataResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Responses.CredentialDataResponse'
      properties:
        role_arn:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Responses.AzureBasicDataResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Responses.CredentialDataResponse'
      properties:
        tenant_id:
          type: string
          nullable: true
        subscription_id:
          type: string
          nullable: true
        app_id:
          type: string
          nullable: true
        app_secret:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Responses.BaseCredentialResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        cloud_type:
          type: string
          nullable: true
        cloud_identifier:
          type: string
          nullable: true
        credential_data:
          oneOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Responses.AwsBasicDataResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Responses.AwsRoleArnDataResponse'
            - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Responses.AzureBasicDataResponse'
          nullable: true
        modified_by:
          type: string
          nullable: true
        last_modified:
          type: string
          format: date-time
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Responses.CredentialDataResponse:
      required:
        - type
      type: object
      properties:
        type:
          type: string
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Responses.CredentialListItemResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Responses.BaseCredentialResponse'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.CredentialStore.Contracts.Responses.CredentialResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.CredentialStore.Contracts.Responses.BaseCredentialResponse'
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Governance.Contracts.Requests.AccountPolicyInstances.CreatePolicyInstanceRequest:
      type: object
      properties:
        policy_template_name:
          type: string
          nullable: true
        policy_name:
          type: string
          nullable: true
        variables:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Governance.Contracts.Requests.AccountPolicyInstances.PolicyVariableValues'
          nullable: true
        spaces:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Governance.Contracts.Requests.AccountPolicyInstances.PolicyVariableValues:
      type: object
      properties:
        name:
          type: string
          nullable: true
        values:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyInstances.CreateAccountPolicyInstanceResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyInstances.GetAccountPolicyInstancesResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        policy_template:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyInstances.PolicyTemplateDataForGetInstancesResponse'
          nullable: true
        created_date:
          type: string
          format: date-time
        created_by:
          type: string
          nullable: true
        last_modified:
          type: string
          format: date-time
        last_modified_by:
          type: string
          nullable: true
        variables:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyInstances.PolicyInstanceVariableForGetResponse'
          nullable: true
        spaces:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyInstances.PolicyInstanceVariableForGetResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        values:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyInstances.PolicyTemplateDataForGetInstancesResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        input_type:
          type: string
          nullable: true
        trigger:
          type: string
          nullable: true
        built_in:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyTemplates.GetAllAccountPolicyTemplatesResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        input_type:
          type: string
          nullable: true
        trigger:
          type: string
          nullable: true
        variables:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyTemplates.PolicyVariableDefinitionForGetAllTemplates'
          nullable: true
        policies_count:
          type: integer
          format: int32
        built_in:
          type: boolean
        created_date:
          type: string
          format: date-time
        created_by:
          type: string
          nullable: true
        last_modified:
          type: string
          format: date-time
        last_modified_by:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Governance.Contracts.Responses.AccountPolicyTemplates.PolicyVariableDefinitionForGetAllTemplates:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ParameterStore.Contracts.AddParameterRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.ParameterRequestBase'
      properties:
        name:
          type: string
          description: "Parameter name\r\n<remarks>\r\n- Parameter Name is case-insensitive<br />\r\n- Parameter Name may only contain URL-supported characters including letters, digits, underscores, dashes, etc.\r\n</remarks>"
          nullable: true
      additionalProperties: false
      description: Request to add parameter to Parameter Store
      x-internal: true
    Quali.Colony.Services.ParameterStore.Contracts.ParameterRequestBase:
      type: object
      properties:
        description:
          type: string
          description: Parameter description
          nullable: true
        value:
          type: string
          description: Parameter value
          nullable: true
        sensitive:
          type: boolean
          description: Indication whether the parameter is sensitive
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ParameterStore.Contracts.ParameterStoreItemResponse:
      type: object
      properties:
        name:
          type: string
          description: Parameter name
          nullable: true
        description:
          type: string
          description: Parameter description
          nullable: true
        value:
          type: string
          description: Parameter value
          nullable: true
        sensitive:
          type: boolean
          description: Indication whether the parameter is sensitive
        modified_by:
          type: string
          description: Name of the last user who modified the parameter
          nullable: true
        last_modified:
          type: string
          description: Last modification date and time of the parameter
          format: date-time
      additionalProperties: false
      description: Parameter Store item information
      x-internal: true
    Quali.Colony.Services.ParameterStore.Contracts.SpaceParameterStoreItemResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.ParameterStoreItemResponse'
      properties:
        overrides_account:
          type: boolean
          description: Indication whether there is an account parameter with the same name
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.ParameterStore.Contracts.UpdateParameterRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.ParameterStore.Contracts.ParameterRequestBase'
      additionalProperties: false
      description: Request to update parameter in Parameter Store
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.AssetDriftResponse:
      type: object
      properties:
        detected:
          type: boolean
        deployed_commit_sha:
          type: string
          nullable: true
        latest_commit_sha:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.DeploymentDriftResponse:
      type: object
      properties:
        detected:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentBlueprintGrainResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentGrainResponse'
      properties:
        grains:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentGrainResponse'
              - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentBlueprintGrainResponse'
            x-internal: true
          nullable: true
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentNameValueResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentDefinitionResponse:
      type: object
      properties:
        metadata:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentMetadataResponse'
          nullable: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentNameValueResponse'
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.SandboxTag'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentErrorResponse:
      type: object
      properties:
        message:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentExecutionResponse:
      type: object
      properties:
        retention:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.IEnvironmentExecutionRetentionResponse'
          nullable: true
        start_time:
          type: string
          format: date-time
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentFeedResponse:
      type: object
      properties:
        space_name:
          type: string
          nullable: true
        sandbox_id:
          type: string
          nullable: true
        sandbox_name:
          type: string
          nullable: true
        start_time:
          type: string
          format: date-time
        owner_name:
          type: string
          nullable: true
        feed_type:
          type: string
          nullable: true
        grain_path:
          type: string
          nullable: true
        duration:
          type: string
          format: date-span
        is_drift_detected:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentGrainActivityResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        log:
          type: string
          nullable: true
        execution:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.TimeDataResponse'
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentErrorResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentGrainResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        kind:
          type: string
          nullable: true
        execution_host:
          type: string
          nullable: true
        depends_on:
          type: array
          items:
            type: string
          nullable: true
        state:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentGrainStateResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentGrainStageResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        execution:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.TimeDataResponse'
          nullable: true
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentGrainActivityResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentGrainStateResponse:
      type: object
      properties:
        current_state:
          type: string
          nullable: true
        drift:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.GrainDriftResponse'
          nullable: true
        stages:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentGrainStageResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentMetadataResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        space_name:
          type: string
          nullable: true
        automation:
          type: boolean
        blueprint:
          type: string
          nullable: true
          readOnly: true
        blueprint_name:
          type: string
          nullable: true
        repository_name:
          type: string
          nullable: true
        blueprint_inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Contracts.BlueprintsV2.BlueprintInputParameterResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentNameValueResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentOutputResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        kind:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentStateResponse:
      type: object
      properties:
        current_state:
          type: string
          nullable: true
        grains:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentGrainResponse'
              - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentBlueprintGrainResponse'
            x-internal: true
          nullable: true
        execution:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentExecutionResponse'
          nullable: true
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentOutputResponse'
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.EnvironmentErrorResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.GrainDriftResponse:
      type: object
      properties:
        deployment:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.DeploymentDriftResponse'
          nullable: true
        asset:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.AssetDriftResponse'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.IEnvironmentExecutionRetentionResponse:
      type: object
      properties:
        kind:
          type: string
          description: The Retention kind
          nullable: true
          readOnly: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.Introspection.Responses.EnvironmentIntrospectionMetadataResponse:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.Introspection.Responses.EnvironmentIntrospectionResourceMetadataResponse'
          description: The metadata for of the Introspection resources of all the grains in the environment
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.Introspection.Responses.EnvironmentIntrospectionResourceMetadataResponse:
      type: object
      properties:
        grain_path:
          type: string
          description: Grain Path
          nullable: true
        grain_type:
          type: string
          description: Grain Type
          nullable: true
        resource_name:
          type: string
          description: Unique identifier of the resource instance
          nullable: true
        resource_type:
          type: string
          description: Type of the resource
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.Introspection.Responses.GetIntrospectionResourcePowerStatusResponse:
      type: object
      properties:
        power_status:
          type: string
          description: Power status of the resource
          nullable: true
      additionalProperties: false
      description: Information about the power status of an Introspection Resource
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.Introspection.Responses.GrainIntrospectionResponse:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.Introspection.Responses.IntrospectionResourceResponse'
          description: List of resources behind the grain
          nullable: true
        errors:
          type: array
          items:
            type: string
          description: Error messages that occurred when collecting the introspection information
          nullable: true
      additionalProperties: false
      description: Introspection information of a grain
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.Introspection.Responses.IntrospectionResourceResponse:
      type: object
      properties:
        name:
          type: string
          description: Unique identifier of the resource instance
          nullable: true
        type:
          type: string
          description: Type of the resource
          nullable: true
        dependency_identifier:
          type: string
          description: 'Identifier that is not unique, but common to multiple instances of a single resource, used for matching names from the ''depends_on'' property'
          nullable: true
        attributes:
          type: object
          additionalProperties:
            type: string
          description: All attributes (names and values) of a single instance of the resource
          nullable: true
        depends_on:
          type: array
          items:
            type: string
          description: List of "dependency_identifier"'s that this resource depends on
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.SandboxTag:
      type: object
      properties:
        name:
          type: string
          description: Tag name
          nullable: true
        value:
          type: string
          description: Tag value
          nullable: true
        modified_by:
          type: string
          description: Name of the last user who modified the tag
          nullable: true
        last_modified:
          type: string
          description: Last modification data and time of the tag
          format: date-time
          nullable: true
        created_by:
          type: string
          description: Name of the user who created the tag
          nullable: true
        created_date:
          type: string
          description: Creation date and time of the tag
          format: date-time
          nullable: true
        scope:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Services.Sandboxes.Api.Contracts.TagScope'
          description: 'Tag scope (''account'', ''space'', ''blueprint'' or ''runtime'')'
          nullable: true
        possible_values:
          type: array
          items:
            type: string
          description: "Tag possible values\r\n<remarks>Tag value must be one of the possible values</remarks>"
          nullable: true
        description:
          type: string
          description: Tag description
          nullable: true
        tag_type:
          allOf:
            - $ref: '#/components/schemas/Quali.Colony.Contracts.Tags.TagType'
          description: 'Tag type (''system'', ''user_defined'', ''override'' or ''pre_defined'')'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.TagScope:
      type: object
      additionalProperties: false
      x-internal: true
    Quali.Colony.Services.Sandboxes.Api.Contracts.TimeDataResponse:
      type: object
      properties:
        start:
          type: string
          format: date-time
          nullable: true
        duration:
          type: string
          format: date-span
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Views.Contracts.CreateViewRequest:
      type: object
      properties:
        view_name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        environments:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Colony.Web.Response.ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Colony.Abstractions.Exceptions.Error'
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Torque.ApprovalEngine.Contracts.ApprovalRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        accountId:
          type: string
          format: uuid
        environmentDetails:
          allOf:
            - $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.EnvironmentDetails'
          nullable: true
        creationTimeUtc:
          type: string
          format: date-time
        status:
          allOf:
            - $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.ApprovalStatus'
      additionalProperties: false
      x-internal: true
    Quali.Torque.ApprovalEngine.Contracts.ApprovalStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
      x-internal: true
    Quali.Torque.ApprovalEngine.Contracts.BlueprintDetails:
      type: object
      properties:
        name:
          type: string
          nullable: true
        repositoryName:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Torque.ApprovalEngine.Contracts.EnvironmentDetails:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        owner:
          type: string
          format: uuid
        ownerName:
          type: string
          nullable: true
        space:
          type: string
          format: uuid
        spaceName:
          type: string
          nullable: true
        duration:
          type: string
          format: date-span
        correlationId:
          type: string
          format: uuid
        environmentId:
          type: string
          nullable: true
        createTime:
          type: string
          format: date-time
        blueprint:
          allOf:
            - $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.BlueprintDetails'
          nullable: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.SandboxInput'
          nullable: true
        notes:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Torque.ApprovalEngine.Contracts.Providers.ApprovalProviderType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
      x-internal: true
    Quali.Torque.ApprovalEngine.Contracts.Providers.UpdateApprovalProviderRequest:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.Providers.ApprovalProviderType'
      additionalProperties: false
      x-internal: true
    Quali.Torque.ApprovalEngine.Contracts.Providers.UpdateServiceNowApprovalProviderRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.Providers.UpdateApprovalProviderRequest'
      properties:
        base_url:
          type: string
          nullable: true
        create_ticket_relative_url:
          type: string
          nullable: true
        user_name:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Torque.ApprovalEngine.Contracts.Providers.UpdateTorqueApprovalProviderRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Torque.ApprovalEngine.Contracts.Providers.UpdateApprovalProviderRequest'
      additionalProperties: false
      x-internal: true
    Quali.Torque.ApprovalEngine.Contracts.SandboxInput:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Torque.NotificationService.Contracts.BaseNotificationSubscription:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationSubscriptionTestRequest'
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        end_threshold:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Torque.NotificationService.Contracts.NotificationSubscription:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.BaseNotificationSubscription'
      properties:
        id:
          type: string
          format: uuid
        space_id:
          type: string
          nullable: true
        is_enabled:
          type: boolean
        fault_count:
          type: integer
          format: int32
      additionalProperties: false
      x-internal: true
    Quali.Torque.NotificationService.Contracts.NotificationSubscriptionRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationSubscriptionTestRequest'
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        end_threshold:
          type: number
          format: double
          nullable: true
        isTest:
          type: boolean
      additionalProperties: false
      x-internal: true
    Quali.Torque.NotificationService.Contracts.NotificationSubscriptionTestRequest:
      type: object
      properties:
        target:
          allOf:
            - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationTarget'
          nullable: true
        event_types:
          type: array
          items:
            type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Torque.NotificationService.Contracts.NotificationTarget:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Quali.Torque.NotificationService.Contracts.NotificationTargetType'
        description:
          type: string
          nullable: true
        web_hook:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
      additionalProperties: false
      x-internal: true
    Quali.Torque.NotificationService.Contracts.NotificationTargetType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
      x-internal: true
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'Authorization header using the Bearer scheme. Example: "Authorization: Bearer {token}"'
      name: Authorization
      in: header
security:
  - Bearer: [ ]

spec_version: 2
description: a blueprint for a simple testing

inputs:
  hello_release_name:
    type: string
#   input1:
#     type: string
#     sensitive: false
#     default: "default1"
#     description: "environemnt input 1"
#   agent_name:
#     type: string
#     default: "eks"
#   helm_namespace:
#     type: string
#     default: sveta-test
#   input2:
#     type: string
#     description: "environemnt input 2"    


# values that starts with '{' for liquid template must be encosed with quotes so YAML won't consider them as dict
outputs:
  output1:
    value: '{{sandboxId}}'
#   output2:
#     value: '{{.inputs.input1}}'
  output3:
    value: '{{.grains.simple-tf.outputs.output1}}'
    

grains:
  simple-tf:
    kind: terraform
    spec:
      source:
#         store: test-spec2-public
#         path: terraform/simple-tf-module
        path: github.com/QualiNext/test-spec2-public.git//terraform/simple-tf-module
      agent:
#         name: '{{.inputs.agent_name}}'
        name: eks1
      inputs:
#         - test_input1: env-input-{{.inputs.input1}}
        - test_input1: hardcoded value
        - test_input2: env-id-{{sandboxId}}
      outputs:
        - output1
        - output2

  hello-helm:
    kind: helm
    spec:
      source:
        path: https://github.com/open-toolchain/hello-helm.git//chart/hello
      agent:
#         name: '{{.inputs.agent_name}}'
        name: eks1
      commands:
        - dep up chart/hello
      release: '{{.inputs.hello_release_name}}'
#       namespace: '{{.inputs.namespace}}'

#   helloHelm:
#     kind: helm
# #     depends-on: helloTF
#     spec:
#       source:
#         path: https://github.com/bitnami/charts.git//bitnami/node
#       host:
#         name: '{{.inputs.compute_service_name}}'
#       namespace: '{{inputs.helm_namespace}}'
#       commands:
#         - "dep up bitnami/node"

#       inputs:
#         - nameOverride: '{{.inputs.input1}}'
#         #- nameOverride: '{{.grains.helloTF.outputs.output1}}'
  
